{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":44728387,"authorName":"Dave Goodwin","from":"Dave Goodwin &lt;dgoodwin@...&gt;","profile":"dggoodwin","replyTo":"LIST","senderId":"3gr5P0JrN_aPjFRjWxGmOrPgwLrNoB7MXrdhSS_e_5Kts1K2ZNyHnPOE9JdZC5Wg0YZQ0r5mYkZXjrkotchdsbm1pJT2zkFYOFI","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [cantera] Re: copy constructor for IdealGasMix is broken?","postDate":"1203023571","msgId":1839,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PENBN0RDNTczLTNDNTQtNDdBOC04RDlFLTE5M0MwRUNCQkRGOUBjYWx0ZWNoLmVkdT4=","inReplyToHeader":"PGZwMjdlYysybmp0QGVHcm91cHMuY29tPg==","referencesHeader":"PGZwMjdlYysybmp0QGVHcm91cHMuY29tPg=="},"prevInTopic":1838,"nextInTopic":1840,"prevInTime":1838,"nextInTime":1840,"topicId":1831,"numMessagesInTopic":10,"msgSnippet":"The IdealGasMix class is provided for convenience only.  If your prefer, you can use two objects - one of class Cantera::IdealGasPhase that does only thermo,","rawEmail":"Return-Path: &lt;dgoodwin@...&gt;\r\nX-Sender: dgoodwin@...\r\nX-Apparently-To: cantera@yahoogroups.com\r\nX-Received: (qmail 9328 invoked from network); 14 Feb 2008 21:13:18 -0000\r\nX-Received: from unknown (66.218.67.95)\n  by m52.grp.scd.yahoo.com with QMQP; 14 Feb 2008 21:13:18 -0000\r\nX-Received: from unknown (HELO outgoing-mail.its.caltech.edu) (131.215.239.19)\n  by mta16.grp.scd.yahoo.com with SMTP; 14 Feb 2008 21:13:18 -0000\r\nX-Received: from water-dog.its.caltech.edu (water-dog [192.168.1.26])\n\tby water-ox-postvirus (Postfix) with ESMTP id 903401BB53\n\tfor &lt;cantera@yahoogroups.com&gt;; Thu, 14 Feb 2008 13:13:06 -0800 (PST)\r\nX-Received: from [10.2.36.55] (wireless-gateway-authenticated.caltech.edu [131.215.220.132])\n\t(Authenticated sender: dgg)\n\tby water-ox.its.caltech.edu (Postfix) with ESMTP id A41EF1BAD7\n\tfor &lt;cantera@yahoogroups.com&gt;; Thu, 14 Feb 2008 13:12:43 -0800 (PST)\r\nMime-Version: 1.0 (Apple Message framework v753)\r\nIn-Reply-To: &lt;fp27ec+2njt@...&gt;\r\nReferences: &lt;fp27ec+2njt@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; delsp=yes; format=flowed\r\nMessage-Id: &lt;CA7DC573-3C54-47A8-8D9E-193C0ECBBDF9@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nDate: Thu, 14 Feb 2008 13:12:51 -0800\r\nTo: cantera@yahoogroups.com\r\nX-Mailer: Apple Mail (2.753)\r\nX-Spam-Scanned: at Caltech-ITS on water-dog by amavisd-2.4.5\r\nX-eGroups-Msg-Info: 1:12:0:0:0\r\nFrom: Dave Goodwin &lt;dgoodwin@...&gt;\r\nSubject: Re: [cantera] Re: copy constructor for IdealGasMix is broken?\r\nX-Yahoo-Group-Post: member; u=44728387; y=UORdHXVStaT-av3fSZM1mUSqKrEDxGDehRxqL4izBOMB\r\nX-Yahoo-Profile: dggoodwin\r\n\r\nThe IdealGasMix class is provided for convenience only.  If your  \nprefer, you can use two objects - one of class Cantera::IdealGasPhase  \nthat does only thermo, and then a &quot;kinetics manager&quot; class that does  \nthe kinetics for this object.\n\n\nOn Feb 14, 2008, at 12:14 PM, avmokhov wrote:\n\n&gt; Hello,\n&gt;\n&gt; While I admit that bindings to Python and Matlab are of paramount\n&gt; importance, it is quite pitiful that C++ core should suffer from\n&gt; this. It seems for me that all possible problems with the copy\n&gt; constructing of the ideal gas object are due to design decision to\n&gt; inherit the ideal gas class from thermodynamic and kinetic base\n&gt; classes. Multiple inheritance should be used only when an object\n&gt; includes properties of two base classes. While the ideal gas\n&gt; certainly has thermodynamic properties such as temperature, pressure\n&gt; etc., its relation with kinetic mechanism is not so direct. Would the\n&gt; ideal gas class inherited only from the thermodynamic base (or even\n&gt; better not from both), the problems with interfaces were avoided.\n&gt;\n&gt; Best regards, Anatoli\n&gt;\n&gt; --- In cantera@yahoogroups.com, Dave Goodwin &lt;dgoodwin@...&gt; wrote:\n&gt;&gt;\n&gt;&gt; I think we also need to keep in mind that we are not just writing\n&gt; for\n&gt;&gt; C++ &quot;power users.&quot;  Essentially all useful eqs of state should be\n&gt;&gt; accessible from the other interfaces too, and so shouldn&#39;t rely\n&gt;&gt; overly on special features (e.g. operator overloading) in C++.  Or\n&gt; at\n&gt;&gt; the very least, these things should be kept out of the kernel, and\n&gt;&gt; only used in the C++ interface files (Cantera/cxx/*).\n&gt;&gt;\n&gt;&gt; Dave\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; On Feb 13, 2008, at 2:15 PM, Moffat, Harry K wrote:\n&gt;&gt;\n&gt;&gt;&gt; Hi,\n&gt;&gt;&gt;   copy constructors and assignment operators are implemented for\n&gt; the\n&gt;&gt;&gt; thermo routines, but not for the kinetics operator. That&#39;s why the\n&gt;&gt;&gt; thermo part of the copy worked, but not the kinetics part.\n&gt;&gt;&gt;\n&gt;&gt;&gt; I agree with Dave that there&#39;s a definite cost and potential\n&gt;&gt;&gt; pitfalls to\n&gt;&gt;&gt; developing and maintaining them. There should be a definite\n&gt; reason for\n&gt;&gt;&gt; their implementation.\n&gt;&gt;&gt;\n&gt;&gt;&gt; I had in the back of my mind, at one point, the case of solving\n&gt;&gt;&gt; equilibrium problems with miscibility gaps, where the thermo\n&gt; phase\n&gt;&gt;&gt; would\n&gt;&gt;&gt; need to be split into two (e.g., III-V compound semiconductors\n&gt; which\n&gt;&gt;&gt; obey the regular solution model) for some parameter regimes. I\n&gt; haven&#39;t\n&gt;&gt;&gt; gotten there yet, though, in terms of automagically splitting\n&gt; the\n&gt;&gt;&gt; phase\n&gt;&gt;&gt; where appropriate.\n&gt;&gt;&gt;\n&gt;&gt;&gt; There&#39;s a diamondSurf_dupl test example that exercises the thermo\n&gt;&gt;&gt; assignment operator.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Best wishes,\n&gt;&gt;&gt; Harry Moffat\n&gt;&gt;&gt;\n&gt;&gt;&gt; Harry Moffat                                             (w) (505)\n&gt;&gt;&gt; 844-6912\n&gt;&gt;&gt; Nanoscale and Reactive Processes            (f)   (505) 844-8251\n&gt;&gt;&gt; Sandia National Laboratories\n&gt;&gt;&gt; hkmoffa@...\n&gt;&gt;&gt; P. O. Box 5800-0836\n&gt;&gt;&gt; Albuquerque, NM 87185-0836\n&gt;&gt;&gt;\n&gt;&gt;&gt; -----Original Message-----\n&gt;&gt;&gt; From: cantera@yahoogroups.com [mailto:cantera@yahoogroups.com]\n&gt; On\n&gt;&gt;&gt; Behalf\n&gt;&gt;&gt; Of yarmond\n&gt;&gt;&gt; Sent: Wednesday, February 13, 2008 9:33 AM\n&gt;&gt;&gt; To: cantera@yahoogroups.com\n&gt;&gt;&gt; Subject: [cantera] Re: copy constructor for IdealGasMix is broken?\n&gt;&gt;&gt;\n&gt;&gt;&gt; Dave,\n&gt;&gt;&gt;\n&gt;&gt;&gt; Thanks for the explanation. Is there any chance that the copy\n&gt;&gt;&gt; constructor will be implemented? I was hoping to be able to use\n&gt;&gt;&gt; them in\n&gt;&gt;&gt; some of the standard container classes, e.g. std::vector or\n&gt; std::list,\n&gt;&gt;&gt; but I don&#39;t think this is possible without a functional copy\n&gt;&gt;&gt; constructor.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Also, it would be nice to repeatedly read the input file from\n&gt; disk. Is\n&gt;&gt;&gt; there a way to at least avoid this? I wasn&#39;t able to follow the\n&gt;&gt;&gt; documentation well enough to know if this is possible.\n&gt;&gt;&gt;\n&gt;&gt;&gt; Thanks,\n&gt;&gt;&gt; Ray\n&gt;&gt;&gt;\n&gt;&gt;&gt; --- In cantera@yahoogroups.com, Dave Goodwin &lt;dgoodwin@&gt; wrote:\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; The reason for this is that Cantera builds complete objects for\n&gt;&gt;&gt;&gt; use in\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; C++ code from CTI or XML input files.  This maintains\n&gt; consistency\n&gt;&gt;&gt;&gt; with\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; objects created from Python, Matlab, or Fortran.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; The classes in the Cantera kernel (those in &quot;Cantera/src/*&quot;\n&gt; should\n&gt;&gt;&gt;&gt; never be instantiated from copy constructors, but always from\n&gt; an\n&gt;&gt;&gt;&gt; input\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; file or from a factory method designed for this purpose.  At the\n&gt; C++\n&gt;&gt;&gt;&gt; interface level (those files in Cantera/cxx/include/cantera,\n&gt; many of\n&gt;&gt;&gt;&gt; the classes derive from multiple kernel classes, to provide (for\n&gt;&gt;&gt;&gt; convenience only)  a single object that represents the\n&gt; thermodynamic\n&gt;&gt;&gt;&gt; properties (equation of state) and the kinetics, at least for\n&gt;&gt;&gt;&gt; homogeneous kinetics. I am in the process of changing the\n&gt; namespace\n&gt;&gt;&gt;&gt; these classes live in to &quot;Cantera_CXX&quot; to help avoid these\n&gt;&gt;&gt;&gt; confusions.\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; But still, I advise against using copy constructors or assignment\n&gt;&gt;&gt;&gt; operators... These often cause more problems than they solve!!\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; Dave\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; The CVS repository will soon reflect the namespace changes but\n&gt; does\n&gt;&gt;&gt;&gt; not yet...\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt; On Feb 13, 2008, at 5:32 AM, avmokhov wrote:\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Hi,\n&gt;&gt;&gt;&gt;&gt; You can not use a copy constructor for an ideal gas mixture\n&gt; because\n&gt;&gt;&gt;&gt;&gt; the assignment operator is (still) not implemented. If you put\n&gt; try -\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; catch block you will catch a Cantera exception.\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Best regards, Anatoli\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; --- In cantera@yahoogroups.com, &quot;yarmond&quot; &lt;yarmond@&gt; wrote:\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; I am having some issues when trying to copy IdealGasMix\n&gt; objects.\n&gt;&gt;&gt;&gt;&gt; From\n&gt;&gt;&gt;&gt;&gt;&gt; looking at the header files, it seems that the copy\n&gt; constructor is\n&gt;&gt;&gt;&gt;&gt;&gt; intended to be usable, but I have been getting some unexpected\n&gt;&gt;&gt;&gt;&gt; results\n&gt;&gt;&gt;&gt;&gt;&gt; from the following code example:\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; Cantera::IdealGasMix gas1(&quot;gri30.xml&quot;); int n=gas1.nSpecies();\n&gt;&gt;&gt;&gt;&gt;&gt; gas1.setState_TPX(600,Cantera::OneAtm,&quot;O2:1.0, CH4:0.5,\n&gt; N2:3.76&quot;);\n&gt;&gt;&gt;&gt;&gt;&gt; vector&lt;double&gt; wdot1(n), wdot2(n);\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; Cantera::IdealGasMix gas2(gas1);\n&gt;&gt;&gt;&gt;&gt;&gt; gas2.setState_TPX(800,Cantera::OneAtm,&quot;AR:1.0&quot;);\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; gas1.getNetProductionRates(&wdot1[0]);\n&gt;&gt;&gt;&gt;&gt;&gt; gas2.getNetProductionRates(&wdot2[0]);\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; std::cout &lt;&lt; gas1.cv_mass() &lt;&lt; &quot;, &quot; &lt;&lt; gas2.cv_mass() &lt;&lt;\n&gt; std::endl;\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; for (int i=0; i&lt;n; i++) {\n&gt;&gt;&gt;&gt;&gt;&gt; \tstd::cout &lt;&lt; wdot1[i] &lt;&lt; &quot;, &quot; &lt;&lt; wdot2[i] &lt;&lt; std::endl; }\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; gas1.setState_TPX(600,Cantera::OneAtm,&quot;H2:1.0, O2:0.5,\n&gt; N2:3.76&quot;);\n&gt;&gt;&gt;&gt;&gt;&gt; gas1.getNetProductionRates(&wdot1[0]);\n&gt;&gt;&gt;&gt;&gt;&gt; gas2.getNetProductionRates(&wdot2[0]);\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; std::cout &lt;&lt; gas1.cv_mass() &lt;&lt; &quot;, &quot; &lt;&lt; gas2.cv_mass() &lt;&lt;\n&gt; std::endl;\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; for (int i=0; i&lt;n; i++) {\n&gt;&gt;&gt;&gt;&gt;&gt; \tstd::cout &lt;&lt; wdot1[i] &lt;&lt; &quot;, &quot; &lt;&lt; wdot2[i] &lt;&lt; std::endl; }\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; The measurement of cv seems to work for both mixtures, but\n&gt; when the\n&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;&gt; production rates are requested for gas2, it returns the same\n&gt; values\n&gt;&gt;&gt;&gt;&gt; as\n&gt;&gt;&gt;&gt;&gt;&gt; for gas1, even when the state of gas1 is later changed.\n&gt;&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt; Yahoo! Groups Links\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; Yahoo! Groups Links\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; Yahoo! Groups Links\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n\n\n"}}