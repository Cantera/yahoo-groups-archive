{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":44728387,"authorName":"David Goodwin","from":"David Goodwin &lt;dgoodwin@...&gt;","profile":"dggoodwin","replyTo":"LIST","senderId":"LeDE4ACvydl1se9dRL_moEVbKBmZ7UnvM17iKcEQ6o5bsx71dXDoWqHvee8b9mUb7oBBxBWCkY4FpxptD08Wvytx5d3SX8f53o29","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [cantera] bugs cantera 1.7.0","postDate":"1177605323","msgId":1598,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDA4NTI2MDlBLUQ2NDQtNEMzRS05NkQzLTI4RTgyMzlDMkI2QUBjYWx0ZWNoLmVkdT4=","inReplyToHeader":"PGYwbnExaCtkbXJ2QGVHcm91cHMuY29tPg==","referencesHeader":"PGYwbnExaCtkbXJ2QGVHcm91cHMuY29tPg=="},"prevInTopic":1596,"nextInTopic":0,"prevInTime":1597,"nextInTime":1599,"topicId":1596,"numMessagesInTopic":2,"msgSnippet":"Thanks for the suggestions.  I will take a look and try to implement them.","rawEmail":"Return-Path: &lt;dgoodwin@...&gt;\r\nX-Sender: dgoodwin@...\r\nX-Apparently-To: cantera@yahoogroups.com\r\nReceived: (qmail 69479 invoked from network); 26 Apr 2007 16:38:01 -0000\r\nReceived: from unknown (66.218.66.72)\n  by m43.grp.scd.yahoo.com with QMQP; 26 Apr 2007 16:38:01 -0000\r\nReceived: from unknown (HELO outgoing-mail.its.caltech.edu) (131.215.239.19)\n  by mta14.grp.scd.yahoo.com with SMTP; 26 Apr 2007 16:38:01 -0000\r\nReceived: from fire-dog.caltech.edu (fire-dog [192.168.1.4])\n\tby earth-ox-postvirus (Postfix) with ESMTP id BEA0F37011\n\tfor &lt;cantera@yahoogroups.com&gt;; Thu, 26 Apr 2007 09:35:26 -0700 (PDT)\r\nReceived: from [131.215.101.32] (blue.caltech.edu [131.215.101.32])\n\t(using TLSv1 with cipher AES128-SHA (128/128 bits))\n\t(No client certificate requested)\n\tby fire-ox.its.caltech.edu (Postfix) with ESMTP id 9179435339\n\tfor &lt;cantera@yahoogroups.com&gt;; Thu, 26 Apr 2007 09:35:24 -0700 (PDT)\r\nMime-Version: 1.0 (Apple Message framework v752.3)\r\nIn-Reply-To: &lt;f0nq1h+dmrv@...&gt;\r\nReferences: &lt;f0nq1h+dmrv@...&gt;\r\nContent-Type: text/plain; charset=WINDOWS-1252; delsp=yes; format=flowed\r\nMessage-Id: &lt;0852609A-D644-4C3E-96D3-28E8239C2B6A@...&gt;\r\nContent-Transfer-Encoding: quoted-printable\r\nDate: Thu, 26 Apr 2007 09:35:23 -0700\r\nTo: cantera@yahoogroups.com\r\nX-Mailer: Apple Mail (2.752.3)\r\nX-Spam-Scanned: at Caltech-ITS on fire-dog by amavisd-2.3.3 \r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: David Goodwin &lt;dgoodwin@...&gt;\r\nSubject: Re: [cantera] bugs cantera 1.7.0\r\nX-Yahoo-Group-Post: member; u=44728387; y=iJUK5Fuj5PfpBDdW2qaMpNJRRDXxjAenn6eHr_8TlO_P\r\nX-Yahoo-Profile: dggoodwin\r\n\r\nThanks for the suggestions.  I will take a look and try to implement  \nthem=\r\n.\n\n\nOn Apr 25, 2007, at 7:53 AM, evlampiev.renuda wrote:\n\n&gt; Hello All\n&gt;\n&gt; I=\r\nn our project Cantera 1.7.0 is used as an external complex chemistry\n&gt; simu=\r\nlator coupled with KIVA-program. We found some bugs and issues for\n&gt; an imp=\r\nrovement. Please check below the description of the\n&gt; modifications we made=\r\n.\n&gt;\n&gt; Alexey\n&gt;\n&gt; //=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=\r\n=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D=3D\n&gt;\n=\r\n&gt; Modifications to the class CVodesErr\n&gt;\n&gt; File:\n&gt; CVodesIntegrator.h\n&gt; Des=\r\ncription:\n&gt; The original version of Cantera deals with exceptions by buffer=\r\ning\n&gt; error messages.  This causes memory overruns when Cantera is called\n&gt;=\r\n repeatedly from a CFD application and error messages accumulate.  This\n&gt; p=\r\nroblem was witnessed when CVodes =96 integrator failed repeatedly,\n&gt; result=\r\ning in the CVodesErr-exception. To circumvent this problem, the\n&gt; CVodesErr=\r\n class was modified to report errors using the STL exception\n&gt; reporting, i=\r\nnstead of submitting error messages to the dynamic  \n&gt; storage.\n&gt; Modificat=\r\nion 1\n&gt; File: \t\t\t\t\tCVodesIntegrator.h\n&gt; Additional include statement\t\t#incl=\r\nude &lt;stdexcept&gt;\n&gt;\n&gt; Modification 2\n&gt; File: \t\t\t\tCVodesIntegrator.h\n&gt; Class d=\r\neclaration:\t\tclass CVodesErr\n&gt;\n&gt;\n&gt; Original code:\n&gt;\n&gt; class CVodesErr : pub=\r\nlic CanteraError {\n&gt;     public:\n&gt;         CVodesErr(string msg) : CanteraE=\r\nrror(&quot;CVodesIntegrator&quot;,  \n&gt; msg){}\n&gt;     };\n&gt;\n&gt;\n&gt; Modified code:\n&gt;\n&gt;\n&gt; cla=\r\nss CVodesErr : public std::runtime_error\n&gt; {\n&gt; \ttypedef std::runtime_error =\r\nBASE;\n&gt; public:\n&gt; \tCVodesErr(string msg) :\n&gt; \t\tBASE( std::string(&quot;CVodesInt=\r\negrator: &quot;) + msg){}\n&gt; };\n&gt;\n&gt; Modification for the class CVodesIntegrator\n&gt;=\r\n Files:\n&gt; CVodesIntegrator.h\n&gt; CVodesIntegrator.cpp\n&gt; Description:\n&gt; There =\r\nis a memory leak problem associated with the method\n&gt;\n&gt; void CVodesIntegrat=\r\nor::initialize(double t0, FuncEval& func)\n&gt;\n&gt; Repeated calls to the CVodes-=\r\nintegrator perform the memory allocations\n&gt;\n&gt; m_fdata =3D new FuncData(&fun=\r\nc, func.nparams());\n&gt;\n&gt; without any prior de-allocation applied to the m_fd=\r\nata-pointer. It is\n&gt; necessary to modify the CVodesIntegrator class to ensu=\r\nre proper\n&gt; destruction of pointers. The modifications have been made in fi=\r\nles\n&gt; CVodesIntegrator.h and CVodesIntegrator.cpp.\n&gt;\n&gt; Modification 1\n&gt;\n&gt; F=\r\nile: \t\t\tCVodesIntegrator.h\n&gt; Class declaration:\tclass CVodesIntegrator\n&gt;\n&gt; =\r\nOriginal code:\n&gt;\n&gt; FuncData* m_fdata;\n&gt;\n&gt; Modified code:\n&gt;\n&gt; std::auto_ptr&lt;=\r\n FuncData &gt; m_fdata;\n&gt;\n&gt; Modification 2\n&gt;\n&gt; File:\t\t\tCVodesIntegrator.cpp\n&gt; =\r\nMethod:\t\n&gt; void CVodesIntegrator::initialize(double t0, FuncEval& func)\n&gt;\n&gt;=\r\n Original code:\n&gt;\n&gt; m_fdata =3D new FuncData(&func, func.nparams());\n&gt;\n&gt; Mo=\r\ndified code:\n&gt;\n&gt; m_fdata.reset( new FuncData(&func, func.nparams()) );\n&gt;\n&gt; =\r\nModification 3\n&gt;\n&gt; File:\t\t\tCVodesIntegrator.cpp\n&gt; Method:\t\n&gt; void CVodesInt=\r\negrator::initialize(double t0, FuncEval& func)\n&gt;\n&gt; Original code:\n&gt;\n&gt; flag =\r\n=3D CVodeSetFdata(m_cvode_mem, (void*)m_fdata);\n&gt;\n&gt; Modified code:\n&gt;\n&gt; flag=\r\n =3D CVodeSetFdata(m_cvode_mem, (void*)( m_fdata.get() ));\n&gt;\n&gt; Modification=\r\n for the class GasKinetics\n&gt; File:\n&gt; GasKinetics.cpp\n&gt; Description:\n&gt;\n&gt; Che=\r\ncks must be added to prevent memory access violations.\n&gt; Modification 1\n&gt; F=\r\nile:\t\tGasKinetics.cpp\n&gt; Method:\tvoid GasKinetics::_update_rates_T()\n&gt;\n&gt; Ori=\r\nginal code:\n&gt;\n&gt; m_rates.update(T, logT, &m_kdata-&gt;m_rfn[0]);\n&gt;\n&gt; Modified c=\r\node:\n&gt;\n&gt; if( false =3D=3D m_kdata-&gt;m_rfn.empty() )m_rates.update(T, logT,\n&gt;=\r\n &m_kdata-&gt;m_rfn[0]);\n&gt;\n&gt; Modification 2\n&gt; File: GasKinetics.cpp\n&gt; Function=\r\n: void GasKinetics::_update_rates_T()\n&gt;\n&gt; Original code:\n&gt;\n&gt; m_falloff_low_=\r\nrates.update(T, logT, &m_kdata-&gt;m_rfn_low[0]);\n&gt;\n&gt; Modified code:\n&gt;\n&gt; if( f=\r\nalse =3D=3D m_kdata-&gt;m_rfn_low.empty() )\n&gt; m_falloff_low_rates.update(T, lo=\r\ngT, &m_kdata-&gt;m_rfn_low[0]);\n&gt;\n&gt; Modification 3\n&gt; File: GasKinetics.cpp\n&gt; F=\r\nunction: void GasKinetics::_update_rates_T()\n&gt;\n&gt; Original code:\n&gt;\n&gt; m_fallo=\r\nff_high_rates.update(T, logT, &m_kdata-&gt;m_rfn_high[0]);\n&gt;\n&gt; Modified code:\n=\r\n&gt;\n&gt; if( false =3D=3D m_kdata-&gt;m_rfn_high.empty()\n&gt; )m_falloff_high_rates.up=\r\ndate(T, logT, &m_kdata-&gt;m_rfn_high[0]);\n&gt;\n&gt; Modification 4\n&gt; File: GasKinet=\r\nics.cpp\n&gt; Function: void GasKinetics::_update_rates_T()\n&gt;\n&gt;\n&gt; Original code=\r\n:\n&gt;\n&gt; m_falloffn.updateTemp(T, &m_kdata-&gt;falloff_work[0]);\n&gt;\n&gt; Modified cod=\r\ne:\n&gt;\n&gt; if( false =3D=3D m_kdata-&gt;falloff_work.empty() )m_falloffn.updateTem=\r\np(T,\n&gt; &m_kdata-&gt;falloff_work[0]);\n&gt;\n&gt;\n&gt; Modification 5\n&gt; File: GasKinetics=\r\n.cpp\n&gt; Function: void GasKinetics::_update_rates_C()\n&gt;\n&gt;\n&gt; Original code:\n&gt;=\r\n\n&gt;\n&gt; thermo().getActivityConcentrations(&m_conc[0]);\n&gt;\n&gt; Modified code:\n&gt;\n&gt;=\r\n if( false =3D=3D m_conc.empty()\n&gt; )thermo().getActivityConcentrations(&m_c=\r\nonc[0]);\n&gt;\n&gt;\n&gt; Modification 6\n&gt; File: GasKinetics.cpp\n&gt; Function: void GasK=\r\ninetics::_update_rates_C()\n&gt;\n&gt; Original code:\n&gt;\n&gt; m_3b_concm.update(m_conc,=\r\n ctot, &m_kdata-&gt;concm_3b_values[0]);\n&gt;\n&gt; Modified code:\n&gt;\n&gt; if( false =3D=\r\n=3D m_kdata-&gt;concm_3b_values.empty() )\n&gt; m_3b_concm.update(m_conc, ctot, &m=\r\n_kdata-&gt;concm_3b_values[0]);\n&gt;\n&gt; Modification 7\n&gt; File: GasKinetics.cpp\n&gt; F=\r\nunction: void GasKinetics::_update_rates_C()\n&gt;\n&gt;\n&gt; Original code:\n&gt;\n&gt; m_fal=\r\nloff_concm.update(m_conc, ctot,\n&gt;             &m_kdata-&gt;concm_falloff_value=\r\ns[0]);\n&gt;\n&gt; Modified code:\n&gt;\n&gt;\n&gt; if(false =3D=3D m_kdata-&gt;concm_falloff_valu=\r\nes.empty()\n&gt; )m_falloff_concm.update(m_conc, ctot,\n&gt;             &m_kdata-&gt;=\r\nconcm_falloff_values[0]);\n&gt;\n&gt;\n&gt;\n&gt; Modification 8\n&gt; File: GasKinetics.cpp\n&gt; =\r\nFunction: void GasKinetics::updateKc()\n&gt;\n&gt; Original code:\n&gt;\n&gt; thermo().getS=\r\ntandardChemPotentials(&m_grt[0]);\n&gt;\n&gt; Modified code:\n&gt;\n&gt; if( false =3D=3D m=\r\n_grt.empty() )\n&gt; thermo().getStandardChemPotentials(&m_grt[0]);\n&gt;\n&gt;\n&gt; Modif=\r\nication 9\n&gt; File: GasKinetics.cpp\n&gt; Function: void GasKinetics::updateKc()\n=\r\n&gt;\n&gt; Original code:\n&gt;\n&gt; m_rxnstoich-&gt;getRevReactionDelta(m_ii, &m_grt[0], &m=\r\n_rkc[0]);\n&gt;\n&gt; Modified code:\n&gt;\n&gt; if( false =3D=3D m_grt.empty() && false =\r\n=3D=3D m_rkc.empty()\n&gt; )m_rxnstoich-&gt;getRevReactionDelta(m_ii, &m_grt[0], &=\r\nm_rkc[0]);\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; Modification 10\n&gt; File: GasKinetics.cpp\n&gt; Function:  v=\r\noid GasKinetics::getEquilibriumConstants(doublereal* kc)\n&gt;\n&gt; Original code:=\r\n\n&gt;\n&gt; thermo().getStandardChemPotentials(&m_grt[0]);\n&gt;\n&gt; Modified code:\n&gt;\n&gt; =\r\nif( false =3D=3D m_grt.empty() )\n&gt; thermo().getStandardChemPotentials(&m_gr=\r\nt[0]);\n&gt;\n&gt;\n&gt;\n&gt; Modification 11\n&gt; File: GasKinetics.cpp\n&gt; Function:  void Ga=\r\nsKinetics::getEquilibriumConstants(doublereal* kc)\n&gt;\n&gt; Original code:\n&gt;\n&gt; m=\r\n_rxnstoich-&gt;getReactionDelta(m_ii, &m_grt[0], &rkc[0]);\n&gt;\n&gt; Modified code:\n=\r\n&gt;\n&gt; if( false =3D=3D m_grt.empty() && false =3D=3D rkc.empty() )\n&gt; m_rxnsto=\r\nich-&gt;getReactionDelta(m_ii, &m_grt[0], &rkc[0]);\n&gt;\n&gt;\n&gt;\n&gt; Modification 12\n&gt; =\r\nFile: GasKinetics.cpp\n&gt; Function:  void GasKinetics::getDeltaGibbs(doublere=\r\nal* deltaG)\n&gt;\n&gt;\n&gt; Original code:\n&gt;\n&gt; thermo().getChemPotentials(&m_grt[0]);=\r\n\n&gt;\n&gt; Modified code:\n&gt;\n&gt; if( false =3D=3D m_grt.empty() ) thermo().getChemPo=\r\ntentials(&m_grt[0]);\n&gt;\n&gt;\n&gt;\n&gt; Modification 13\n&gt; File: GasKinetics.cpp\n&gt; Func=\r\ntion:  void GasKinetics::getDeltaGibbs(doublereal* deltaG)\n&gt;\n&gt; Original cod=\r\ne:\n&gt;\n&gt; m_rxnstoich-&gt;getReactionDelta(m_ii, &m_grt[0], deltaG);\n&gt;\n&gt; Modified=\r\n code:\n&gt;\n&gt; if( false =3D=3D m_grt.empty() ) m_rxnstoich-&gt;getReactionDelta(m=\r\n_ii,\n&gt; &m_grt[0], deltaG);\n&gt;\n&gt;\n&gt; Modification 14\n&gt; File: GasKinetics.cpp\n&gt; =\r\nFunction:  void GasKinetics::processFalloffReactions()\n&gt;\n&gt; Original code:\n&gt;=\r\n\n&gt; m_falloffn.pr_to_falloff( &pr[0], &m_kdata-&gt;falloff_work[0] );\n&gt;\n&gt; Modif=\r\nied code:\n&gt;\n&gt; if( false =3D=3D m_kdata-&gt;falloff_work.empty() )m_falloffn.pr=\r\n_to_falloff(\n&gt; &pr[0], &m_kdata-&gt;falloff_work[0] );\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; Y=\r\nahoo! Groups Links\n&gt;\n&gt;\n&gt;\n\n\n"}}