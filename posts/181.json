{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":44728387,"authorName":"David Goodwin","from":"David Goodwin &lt;dgoodwin@...&gt;","profile":"dggoodwin","replyTo":"LIST","senderId":"EmazDREgQDKGN4azoy6o67b6Lite1Oai3PmIB0p1Yz5bwZdszXzIhDExOTS77_yjSarSU-xVwPOyNvAppV0qbVsphdOOvbsNUZsG","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [cantera] Re: Copying Cantera mixtures in matlab?","postDate":"1061330629","msgId":181,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDAyRDIyNDlCLUQyOTEtMTFENy1BNkVDLTAwMDM5M0QyRDFBRUBjYWx0ZWNoLmVkdT4=","inReplyToHeader":"PGJodTNnaCtnczZjQGVHcm91cHMuY29tPg=="},"prevInTopic":180,"nextInTopic":182,"prevInTime":180,"nextInTime":182,"topicId":178,"numMessagesInTopic":5,"msgSnippet":"Brooks - I would recommend that you consider changing your code to avoid making multiple copies of class Solution objects. The reason is that these are ","rawEmail":"Return-Path: &lt;dgoodwin@...&gt;\r\nX-Sender: dgoodwin@...\r\nX-Apparently-To: cantera@yahoogroups.com\r\nReceived: (qmail 85804 invoked from network); 19 Aug 2003 22:04:04 -0000\r\nReceived: from unknown (66.218.66.217)\n  by m7.grp.scd.yahoo.com with QMQP; 19 Aug 2003 22:04:04 -0000\r\nReceived: from unknown (HELO water-ox.its.caltech.edu) (131.215.49.69)\n  by mta2.grp.scd.yahoo.com with SMTP; 19 Aug 2003 22:04:04 -0000\r\nReceived: from earth-dog (earth-dog [192.168.1.3])\n\tby water-ox-postvirus (Postfix) with ESMTP id 6017726AC5F\n\tfor &lt;cantera@yahoogroups.com&gt;; Tue, 19 Aug 2003 15:03:53 -0700 (PDT)\r\nReceived: from water-ox ([192.168.1.10])\n\tby earth-dog (MailMonitor for SMTP v1.2.2 ) ;\n\tTue, 19 Aug 2003 15:03:51 -0700 (PDT)\r\nReceived: from caltech.edu (DHCP-101-188.caltech.edu [131.215.101.188])\n\tby water-ox.its.caltech.edu (Postfix) with ESMTP id 8F08626AC63\n\tfor &lt;cantera@yahoogroups.com&gt;; Tue, 19 Aug 2003 15:03:50 -0700 (PDT)\r\nDate: Tue, 19 Aug 2003 15:03:49 -0700\r\nSubject: Re: [cantera] Re: Copying Cantera mixtures in matlab?\r\nContent-Type: text/plain; delsp=yes; charset=US-ASCII; format=flowed\r\nMime-Version: 1.0 (Apple Message framework v552)\r\nTo: cantera@yahoogroups.com\r\nContent-Transfer-Encoding: 7bit\r\nIn-Reply-To: &lt;bhu3gh+gs6c@...&gt;\r\nMessage-Id: &lt;02D2249B-D291-11D7-A6EC-000393D2D1AE@...&gt;\r\nX-Mailer: Apple Mail (2.552)\r\nX-Spam-Status: No, hits=-5.3 tagged_above=-100000.0 required=5.0\n tests=EMAIL_ATTRIBUTION, FROM_CALTECH, IN_REP_TO, QUOTED_EMAIL_TEXT,\n REPLY_WITH_QUOTES, TONER, USER_AGENT_APPLEMAIL\r\nX-Spam-Level: \r\nFrom: David Goodwin &lt;dgoodwin@...&gt;\r\nX-Yahoo-Group-Post: member; u=44728387\r\nX-Yahoo-Profile: dggoodwin\r\n\r\nBrooks -\n\nI would recommend that you consider changing your code to avoid making  \nmultiple copies of class Solution objects. The reason is that these are  \n&quot;heavyweights&quot; - each one contains all reaction mechanism data.  So an  \nalternative would be to create a single heavyweight object, and many  \n&quot;lightweight&quot; ones that are pure Matlab objects or structures that just  \nhold state information (temperature, density or pressure, + mass  \nfractions). Then pass the lightweight objects to your functions, to set  \nthe initial state for a calculation. Something like this:\n\nfunction new_state = F(state, gas)\n    set(gas,&#39;T&#39;,state.T,&#39;P&#39;,state.P,&#39;Y&#39;,state.Y);\n\n    &lt;carry out calculation with gas object&gt;\n\n    new_state.T = temperature(gas);\n    new_state.P = pressure(gas);\n    new_state.Y = massFractions(gas);\nend\n\nThis would be used like this:\n\ngas = IdealGasMix(&#39;gri30.inp&#39;)  % heavyweight reaction mechanism object\n\nstate.T = 1500.0;\nstate.P = oneatm;\nstate.Y =  zeros(1,53);\nstate.Y(1) = 1.0;\n\nstate2 = F(state, gas);\n\nYou could have many state objects, and only need one gas object.  Of  \ncourse, you could define a class for the lightweight state objects to  \nmake the code look cleaner. Roughly  speaking, this is how I usually  \nwrite Cantera applications. I typically create only one object  \nrepresenting each phase or reaction mechanism in a problem, store them  \n(or pointers to them) in some other container object, and use them  \nwhenever I need to evaluate properties or carry out some operation. I  \nstore the state data separately, often in the same container object  \nwhere I put the pointers to the reaction mechanism object(s). Then the  \ncontainer class methods can be defined to add a clean interface that  \nhides the implementation details.\n\nHope this helps,\nDave\n\n\n\n\nOn Tuesday, August 19, 2003, at 02:06 PM, brooksmoses1 wrote:\n\n&gt; Dave -\n&gt;\n&gt; Thanks for the confirmation.  And, yes, in the simple example I\n&gt; gave, constructing the two gasses independently is certainly just\n&gt; as simple as copying them.  In our real code, however, it&#39;s a bit\n&gt; more complicated, and parallel construction isn&#39;t nearly as\n&gt; possible.\n&gt;\n&gt; To a simplified approximation, we have a situation like this: a\n&gt; function A, which takes a gas composition G as an argument.  It\n&gt; calls function B twice, giving it G and two different parameter\n&gt; sets.  B returns a new gas composition -- specifically, G after\n&gt; some reaction processes -- each time, and A compares the two\n&gt; resulting gas compositions and returns some results from the\n&gt; comparison.\n&gt;\n&gt; The two core problems, there, are (1) that function B is given G\n&gt; as an argument, and returns a modified version of G as a result,\n&gt; but the code that calls it assumes that it leaves G itself\n&gt; unmodified in the process, and (2) that parallel construction is\n&gt; not properly possible, as A and B do not have sufficient\n&gt; information to create a duplicate of G; they do not know what\n&gt; parameter file to use.\n&gt;\n&gt; Our current workaround is to hardcode the reaction file into our\n&gt; program in several places; an alternate one would be to have A\n&gt; store the state of G in temp variables, call B with the first\n&gt; parameter set, extract the relevant state information from the\n&gt; modified G, reset G to the initial state using the stored values,\n&gt; and repeat with the second parameter set.\n&gt;\n&gt; In both workarounds, we are effectively re-implementing a\n&gt; (defective) deep copy in the Matlab code; the former option is\n&gt; defective by assuming a gas type and requires alterating the\n&gt; code if it changes, while the latter is defective because it\n&gt; copies into a stored state rather than a true solution object and\n&gt; so the &quot;copy&quot; must be transferred back into a solution object\n&gt; before it can be used.  It would thus be a quite notable\n&gt; simplification to our code to be able to do a true deep copy using\n&gt; an intrinsic function.\n&gt;\n&gt; Beyond that, this is all embedded in a loop that calls A several\n&gt; dozen times.  Thus, unless there&#39;s some feature in the Cantera\n&gt; code that can realize that the relevant data file is already loaded\n&gt; (and I admit to having no idea if such a feature is present or\n&gt; not), it will need to reload gri30.xml twice in every step of the\n&gt; loop when the copies are made, slowing things down quite\n&gt; notably.  A deep copy would make it quite simple to avoid this.\n&gt;\n&gt; - Brooks\n&gt;\n&gt; --- In cantera@yahoogroups.com, David Goodwin &lt;dgoodwin@c...&gt; wrote:\n&gt;&gt; Brooks -\n&gt;&gt;\n&gt;&gt; As you&#39;ve discovered, a copy operation in Matlab of a Cantera object  \n&gt;&gt; is\n&gt;&gt; a &#39;shallow&#39; copy operation, because the Matlab object really just  \n&gt;&gt; holds\n&gt;&gt; a pointer. The same is true in Python.\n&gt;&gt; The easiest way to create two independent versions of any Cantera\n&gt;&gt; object is to construct each one independently, for example:\n&gt;&gt;\n&gt;&gt; g = air;\n&gt;&gt; h = air;\n&gt;&gt;\n&gt;&gt; This seems to me to be just about as easy as writing &#39;h = g,&#39; so I\n&gt;&gt; wonder if implementing a &#39;deep&#39; copy operation is really worth it.\n&gt;&gt; Comments, anyone?\n&gt;&gt;\n&gt;&gt; Dave G.\n&gt;\n&gt;\n&gt;\n&gt; ------------------------ Yahoo! Groups Sponsor  \n&gt; ---------------------~--&gt;\n&gt; Buy Ink Cartridges or Refill Kits for Your HP, Epson, Canon or Lexmark\n&gt; Printer at Myinks.com. Free s/h on orders $50 or more to the US &  \n&gt; Canada. http://www.c1tracking.com/l.asp?cid=5511\n&gt; http://us.click.yahoo.com/l.m7sD/LIdGAA/qnsNAA/UGYolB/TM\n&gt; --------------------------------------------------------------------- \n&gt; ~-&gt;\n&gt;\n&gt; To unsubscribe from this group, send an email to:\n&gt; cantera-unsubscribe@egroups.com\n&gt;\n&gt;\n&gt;\n&gt; Your use of Yahoo! Groups is subject to  \n&gt; http://docs.yahoo.com/info/terms/\n&gt;\n&gt;\n&gt;\n&gt;\n\n\n\n"}}