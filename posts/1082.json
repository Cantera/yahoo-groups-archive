{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":44728387,"authorName":"David Goodwin","from":"David Goodwin &lt;dgoodwin@...&gt;","profile":"dggoodwin","replyTo":"LIST","senderId":"cNRGk_UCUl6MQILOFWShd1CB14YHHCTUY8HRngblEgxeWp4gFaE78FUw6wJO0Se_DBVfyS6Q2w5tlPcYrA0EZvPeWzT2jvksGmpI","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [cantera] Re: getRevRateConstants","postDate":"1134667071","msgId":1082,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGU3MWI3NDcxNGE3MTBjMTM4MzJhNDk0OTQ3YmEzMTYyQGNhbHRlY2guZWR1Pg==","inReplyToHeader":"PGRucnRpZythODViQGVHcm91cHMuY29tPg==","referencesHeader":"PGRucnRpZythODViQGVHcm91cHMuY29tPg=="},"prevInTopic":1081,"nextInTopic":0,"prevInTime":1081,"nextInTime":1083,"topicId":1079,"numMessagesInTopic":4,"msgSnippet":"Ulf, I found the problem.  It is in fact a bug in the code, but turns out to be a bit subtle.  If getEquilibriumConstants is called before ","rawEmail":"Return-Path: &lt;dgoodwin@...&gt;\r\nX-Sender: dgoodwin@...\r\nX-Apparently-To: cantera@yahoogroups.com\r\nReceived: (qmail 39882 invoked from network); 15 Dec 2005 17:18:26 -0000\r\nReceived: from unknown (66.218.66.218)\n  by m35.grp.scd.yahoo.com with QMQP; 15 Dec 2005 17:18:26 -0000\r\nReceived: from unknown (HELO outgoing-mail.its.caltech.edu) (131.215.239.19)\n  by mta3.grp.scd.yahoo.com with SMTP; 15 Dec 2005 17:18:26 -0000\r\nReceived: from localhost (earth-dog [192.168.1.3])\n\tby water-ox-postvirus (Postfix) with ESMTP id A674D339B6\n\tfor &lt;cantera@yahoogroups.com&gt;; Thu, 15 Dec 2005 09:17:54 -0800 (PST)\r\nReceived: from [10.1.243.223] (mystic.caltech.edu [131.215.220.112])\n\t(using TLSv1 with cipher RC4-SHA (128/128 bits))\n\t(No client certificate requested)\n\tby earth-ox.its.caltech.edu (Postfix) with ESMTP id A480E109A1A\n\tfor &lt;cantera@yahoogroups.com&gt;; Thu, 15 Dec 2005 09:17:53 -0800 (PST)\r\nMime-Version: 1.0 (Apple Message framework v623)\r\nIn-Reply-To: &lt;dnrtig+a85b@...&gt;\r\nReferences: &lt;dnrtig+a85b@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed\r\nMessage-Id: &lt;e71b74714a710c13832a494947ba3162@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nDate: Thu, 15 Dec 2005 09:17:51 -0800\r\nTo: cantera@yahoogroups.com\r\nX-Mailer: Apple Mail (2.623)\r\nX-Spam-Scanned: at Caltech-ITS on earth-dog by amavisd-2.3.2 \r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: David Goodwin &lt;dgoodwin@...&gt;\r\nSubject: Re: [cantera] Re: getRevRateConstants\r\nX-Yahoo-Group-Post: member; u=44728387; y=tAufEXNz5ce9Miperc0ZTaa5HRazvjCedcuCR6TPrerh\r\nX-Yahoo-Profile: dggoodwin\r\n\r\nUlf,\n\nI found the problem.  It is in fact a bug in the code, but turns out to \nbe a bit subtle.  If &#39;getEquilibriumConstants&#39; is called before \n&#39;getRevRateConstants&#39;, then &#39;getRevRateConstants&#39; returns incorrect \nvalues, as you describe. But if &#39;getEquilibriumConstants&#39; is not \ncalled, everything works fine.  The problem is that \n&#39;getEquilibriumConstants&#39; uses m_rkcn for temporary storage (where it \nstores delta G), and these values are then used in \n&#39;getRevRateConstants,&#39; where it is assumed they hold 1/Kc. I have now \nfixed this problem, and updated &#39;GasKinetics.cpp&#39; in the CVS \nrepository.\n\nHopefully this bug is sufficiently obscure that it has not caused any \nreal problems.  It might show up if someone calls \n&#39;getEquilibriumConstants&#39; and then carries out an isothermal kinetics \nsimulation, since the rate constants would not be recomputed if T \ndoesn&#39;t change.  As always, it is a good idea to check and double check \nany numerical result (as you did), even from Cantera... Thanks for \ntracking this bug down.\n\nDave\n\n\n\nOn Dec 15, 2005, at 6:11 AM, usenechal wrote:\n\n&gt; Dave,\n&gt;\n&gt; but when I look at &quot;m_rkcn&quot; in getRevRateConstants() it holds the\n&gt; reaction-difference of chemical potential (delta_r_g). While\n&gt; equilibrium constant is exp(delta_r_g/(R*T)+...). I made a simple test\n&gt; and I get correct results only if &#39;doIrreversible=true&#39;. I used\n&gt; H2,H-System with chemkin thermodynamics and a reaction like\n&gt;\n&gt; H2 &lt;=&gt; 2H\t1.00E+2     0        0\n&gt;\n&gt; from my calculations:\n&gt; delta_r_g = 2.71E+08 J/kmol\n&gt; k_forward = 100\n&gt; equil constant=3.55E-12 (equal to what getequilibriumconstants() is\n&gt; giving)\n&gt; k_rev = 2.82E+13 (here getrevconstants() is giving 2.71E+08)\n&gt;\n&gt; Am I still doing something wrong? Maybe it&#39;s a compiling problem?\n&gt;\n&gt; best regards\n&gt; Ulf\n&gt;\n&gt; --- In cantera@yahoogroups.com, David Goodwin &lt;dgoodwin@c...&gt; wrote:\n&gt;&gt;\n&gt;&gt; Ulf,\n&gt;&gt;\n&gt;&gt; Actually, it does precisely what you say it should do. The array\n&gt;&gt; &quot;m_rkcn&quot; holds the reciprocal of the equilibrium constant for the\n&gt;&gt; reversible reactions, and is zero for irreversible reactions. So\n&gt;&gt; multiplying the forward rate coefficients by this array generates the\n&gt;&gt; reverse rate coefficients...\n&gt;&gt;\n&gt;&gt; Dave\n&gt;&gt;\n&gt;&gt;\n&gt;&gt; On Dec 14, 2005, at 8:36 AM, usenechal wrote:\n&gt;&gt;\n&gt;&gt;&gt; Dear Prof. Goodwin,\n&gt;&gt;&gt;\n&gt;&gt;&gt; I found in &#39;gaskinetics.cpp&#39; that reverse rates are only computed \n&gt;&gt;&gt; when\n&gt;&gt;&gt; doIrreversible=true. Shouldn&#39;t it depend on the reaction-flag, e.g.\n&gt;&gt;&gt; when the reaction is reversible, the reverse rate is calculated,\n&gt;&gt;&gt; otherwise it is zero?\n&gt;&gt;&gt;\n&gt;&gt;&gt; best regards\n&gt;&gt;&gt; Ulf\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt; Yahoo! Groups Links\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;&gt;\n&gt;&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n\n\n"}}