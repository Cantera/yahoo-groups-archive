{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":11840976,"authorName":"Charlie Westbrook","from":"Charlie Westbrook &lt;westbrook1@...&gt;","replyTo":"LIST","senderId":"GuDFkJwqQ8pJn-Kdam_aUYHjpGsRlukRzpGgq9wXf3FQv0_jU-xVwlj3vEJK3htLyqDWJltpzaLBTk_AU2FjG3k-nb6rAUxM7mp9G_y2","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [cantera] time dependant wall velocity and heat transfer","postDate":"1143574647","msgId":1161,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PHAwNjAxMDJkOGMwNGYzZmJmMTllYkBbMTI4LjExNS4zOC44Ml0+","inReplyToHeader":"PDIwMDYwMzI4MDkxNDQ2LjQxNTMwLnFtYWlsQHdlYjM0NjEwLm1haWwubXVkLnlhaG9vLmNvbT4=","referencesHeader":"PDIwMDYwMzI4MDkxNDQ2LjQxNTMwLnFtYWlsQHdlYjM0NjEwLm1haWwubXVkLnlhaG9vLmNvbT4="},"prevInTopic":1160,"nextInTopic":1162,"prevInTime":1160,"nextInTime":1162,"topicId":1156,"numMessagesInTopic":4,"msgSnippet":"... I don t know if this is particularly relevant, but several codes for reactive flows (Chemkin, HCT, maybe others) have used the slider-crank formula from","rawEmail":"Return-Path: &lt;westbrook1@...&gt;\r\nX-Sender: westbrook1@...\r\nX-Apparently-To: cantera@yahoogroups.com\r\nReceived: (qmail 5169 invoked from network); 28 Mar 2006 19:37:33 -0000\r\nReceived: from unknown (66.218.67.34)\n  by m31.grp.scd.yahoo.com with QMQP; 28 Mar 2006 19:37:33 -0000\r\nReceived: from unknown (HELO smtp-3.llnl.gov) (128.115.41.83)\n  by mta8.grp.scd.yahoo.com with SMTP; 28 Mar 2006 19:37:33 -0000\r\nReceived: from [128.115.38.82] (localhost [127.0.0.1])\n\tby smtp-3.llnl.gov (8.12.3p2-20030917/8.12.3/LLNL evision: 1.16 $) with ESMTP id k2SJbSDS006836\n\tfor &lt;cantera@yahoogroups.com&gt;; Tue, 28 Mar 2006 11:37:29 -0800 (PST)\r\nMime-Version: 1.0\r\nX-Sender: e953750@...\r\nMessage-Id: &lt;p060102d8c04f3fbf19eb@[128.115.38.82]&gt;\r\nIn-Reply-To: &lt;20060328091446.41530.qmail@...&gt;\r\nReferences: &lt;20060328091446.41530.qmail@...&gt;\r\nDate: Tue, 28 Mar 2006 11:37:27 -0800\r\nTo: cantera@yahoogroups.com\r\nContent-Type: multipart/alternative; boundary=&quot;============_-1068547848==_ma============&quot;\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: Charlie Westbrook &lt;westbrook1@...&gt;\r\nSubject: Re: [cantera] time dependant wall velocity and heat transfer\r\nX-Yahoo-Group-Post: member; u=11840976\r\n\r\n\r\n--============_-1068547848==_ma============\r\nContent-Type: text/plain; charset=&quot;us-ascii&quot; ; format=&quot;flowed&quot;\r\n\r\n&gt;&quot;adam.weall&quot; &lt;adam_jw@...&gt; wrote:\n&gt;\n&gt;Hi all,\n&gt;\n&gt;I am trying to simulate a piston using a moving wall in a batch reactor.\n&gt;\n&gt;I use the following from a cantera tutorial,\n&gt;\n&gt;omega=2*pi*(frequency)\n&gt;coeffs =[(0.0 ,0.0), (0.0, (amplitude)]\n&gt;piston_rate =Fourier(omega,coeffs)\n&gt;w=Wall( env,r1,velocity=piston_rate)\n&gt;\n&gt;I can get this to work.\n&gt;\n&gt;But I cant find any documentation on the Fourier function in cantera.\n&gt;Does anyone know any more?\n&gt;\n&gt;The form of the function &quot;velocity&quot; is not clear. It is refered to as\n&gt;a &#39;functor&#39;? and I want to be able to understand how to pass time based\n&gt;functions for heat transfer and velocity to the wall object.\n&gt;\n&gt;Thanks in advance for any info,\n&gt;Adam.\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;Pavle I. Premovic\n&gt;Laboratory for Geochemistr! y,Cosmochemistry&Astrochemistry\n&gt;Faculty of Science, University of Nis, P. O. Box 91,\n&gt;18000 Nis, Serbia\n&gt;\n&gt;\n&gt;\n\n\n\nI don&#39;t know if this is particularly relevant, but several codes for \nreactive flows (Chemkin, HCT, maybe others) have used the \n&quot;slider-crank formula from John Heywood&#39;s book on Internal Combustion \nEngines to produce a time vs. volume relationship when simulating ICE \nconditions.  Each code seems to implement the same formula in its own \nway.  For a long time, we at LLNL have used a moving boundary with a \nprogrammed time/velocity input to simulate the compression stroke in \nsimulations of rapid compression machines, but you need to be able to \nchange the boundary velocity as a function of time in both classes of \nsimulations.  In all these cases, if you can write the functional \nform for the boundary velocity as a function of time, you can get the \ncode to follow it.\n\nCharlie Westbrook\r\n--============_-1068547848==_ma============\r\nContent-Type: text/html; charset=&quot;us-ascii&quot;\r\n\r\n&lt;!doctype html public &quot;-//W3C//DTD W3 HTML//EN&quot;&gt;\n&lt;html&gt;&lt;head&gt;&lt;style type=&quot;text/css&quot;&gt;&lt;!--\nblockquote, dl, ul, ol, li { padding-top: 0 ; padding-bottom: 0 }\n --&gt;&lt;/style&gt;&lt;title&gt;Re: [cantera] time dependant wall velocity and heat\ntransf&lt;/title&gt;&lt;/head&gt;&lt;body&gt;\n&lt;blockquote type=&quot;cite&quot; cite&gt;&lt;tt&gt;&lt;i&gt;&lt;b&gt;&quot;adam.weall&quot;\n&lt;adam_jw@...&gt;&lt;/b&gt;&lt;/i&gt; wrote:&lt;/tt&gt;&lt;br&gt;\n&lt;tt&gt;&lt;/tt&gt;\n&lt;blockquote&gt;&lt;tt&gt;Hi all,&lt;br&gt;\n&lt;br&gt;\nI am trying to simulate a piston using a moving wall in a batch\nreactor.&lt;br&gt;\n&lt;br&gt;\nI use the following from a cantera tutorial,&lt;br&gt;\n&lt;br&gt;\nomega=2*pi*(frequency)&lt;br&gt;\ncoeffs =[(0.0 ,0.0), (0.0, (amplitude)]&lt;br&gt;\npiston_rate =Fourier(omega,coeffs)&lt;br&gt;\nw=Wall( env,r1,velocity=piston_rate)&lt;br&gt;\n&lt;br&gt;\nI can get this to work.&lt;br&gt;\n&lt;br&gt;\nBut I cant find any documentation on the Fourier function in\ncantera.&lt;br&gt;\nDoes anyone know any more?&lt;br&gt;\n&lt;br&gt;\nThe form of the function &quot;velocity&quot; is not clear. It is\nrefered to as&lt;br&gt;\na &#39;functor&#39;? and I want to be able to understand how to pass time\nbased&lt;br&gt;\nfunctions for heat transfer and velocity to the wall object.&lt;br&gt;\n&lt;br&gt;\nThanks in advance for any info,&lt;br&gt;\nAdam.&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\n&lt;/tt&gt;&lt;/blockquote&gt;\n&lt;/blockquote&gt;\n&lt;blockquote type=&quot;cite&quot; cite&gt;&lt;tt&gt;&lt;br&gt;\n&lt;br&gt;\n&lt;br&gt;\nPavle I. Premovic&lt;br&gt;\nLaboratory for Geochemistr! y,Cosmochemistry&amp;Astrochemistry&lt;br&gt;\nFaculty of Science, University of Nis, P. O. Box 91,&lt;br&gt;\n18000 Nis, Serbia&lt;/tt&gt;&lt;br&gt;\n&lt;tt&gt;&lt;/tt&gt;&lt;/blockquote&gt;\n&lt;blockquote type=&quot;cite&quot;\ncite&gt;&lt;tt&gt;&lt;x-tab&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&lt;/x-tab&gt;&lt;x-tab&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n&lt;/x-tab&gt;&lt;/tt&gt;&lt;/blockquote&gt;\n&lt;blockquote type=&quot;cite&quot; cite&gt;\n&lt;hr size=&quot;1&quot;&gt;&lt;/blockquote&gt;\n&lt;div&gt;&lt;tt&gt;&lt;br&gt;&lt;/tt&gt;&lt;/div&gt;\n&lt;div&gt;&lt;tt&gt;&lt;br&gt;&lt;/tt&gt;&lt;/div&gt;\n&lt;div&gt;&lt;tt&gt;&lt;br&gt;&lt;/tt&gt;&lt;/div&gt;\n&lt;div&gt;&lt;tt&gt;I don&#39;t know if this is particularly relevant, but several\ncodes for reactive flows (Chemkin, HCT, maybe others) have used the\n&quot;slider-crank formula from John Heywood&#39;s book on Internal\nCombustion Engines to produce a time vs. volume relationship when\nsimulating ICE conditions.&nbsp; Each code seems to implement the same\nformula in its own way.&nbsp; For a long time, we at LLNL have used a\nmoving boundary with a programmed time/velocity input to simulate the\ncompression stroke in simulations of rapid compression machines, but\nyou need to be able to change the boundary velocity as a function of\ntime in both classes of simulations.&nbsp; In all these cases, if you\ncan write the functional form for the boundary velocity as a function\nof time, you can get the code to follow it.&lt;/tt&gt;&lt;/div&gt;\n&lt;div&gt;&lt;tt&gt;&lt;br&gt;&lt;/tt&gt;&lt;/div&gt;\n&lt;div&gt;&lt;tt&gt;Charlie Westbrook&lt;/tt&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\r\n--============_-1068547848==_ma============--\r\n\n"}}