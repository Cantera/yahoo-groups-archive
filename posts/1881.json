{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":331418669,"authorName":"Ray Speth","from":"&quot;Ray Speth&quot; &lt;yarmond@...&gt;","profile":"yarmond","replyTo":"LIST","senderId":"LOwLpS4T7vvmNgnTPOdssdqKa9uyLekd1NEdqbjLu3PTEFsgLDG4vWOgW9v4UvykaI4o4P98rezX8vDU_aSYNycyxfRCDA","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: Thread safety of MultiTransport","postDate":"1206653906","msgId":1881,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGZzaDQ0aSt0NTVsQGVHcm91cHMuY29tPg==","inReplyToHeader":"PEM0MTA1QjMyLjgzQTUlamFtZXNzdXRoZUBnbWFpbC5jb20+"},"prevInTopic":1880,"nextInTopic":1882,"prevInTime":1880,"nextInTime":1882,"topicId":1862,"numMessagesInTopic":6,"msgSnippet":"Thanks for the replies. For the parts that I was able to get working, I also noticed negligible performance improvements. I wonder if this indicates that","rawEmail":"Return-Path: &lt;yarmond@...&gt;\r\nX-Sender: yarmond@...\r\nX-Apparently-To: cantera@yahoogroups.com\r\nX-Received: (qmail 35627 invoked from network); 27 Mar 2008 21:38:28 -0000\r\nX-Received: from unknown (66.218.67.97)\n  by m36.grp.scd.yahoo.com with QMQP; 27 Mar 2008 21:38:28 -0000\r\nX-Received: from unknown (HELO n14.bullet.mail.re1.yahoo.com) (69.147.103.141)\n  by mta18.grp.scd.yahoo.com with SMTP; 27 Mar 2008 21:38:28 -0000\r\nX-Received: from [68.142.237.90] by n14.bullet.mail.re1.yahoo.com with NNFMP; 27 Mar 2008 21:38:27 -0000\r\nX-Received: from [209.73.164.83] by t6.bullet.re3.yahoo.com with NNFMP; 27 Mar 2008 21:38:27 -0000\r\nX-Received: from [66.218.66.82] by t7.bullet.scd.yahoo.com with NNFMP; 27 Mar 2008 21:38:27 -0000\r\nDate: Thu, 27 Mar 2008 21:38:26 -0000\r\nTo: cantera@yahoogroups.com\r\nMessage-ID: &lt;fsh44i+t55l@...&gt;\r\nIn-Reply-To: &lt;C4105B32.83A5%jamessuthe@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;Ray Speth&quot; &lt;yarmond@...&gt;\r\nSubject: Re: Thread safety of MultiTransport\r\nX-Yahoo-Group-Post: member; u=331418669; y=PX6icZGKfdSPiYrJiBaRPz1qHbsv0DEhGvK9eB-A5qJatQ\r\nX-Yahoo-Profile: yarmond\r\n\r\nThanks for the replies. For the parts that I was able to get working,\nI als=\r\no noticed negligible performance improvements. I wonder if this\nindicates t=\r\nhat performance is mostly limited by memory access speed.\n\nI have tried the=\r\n example code I gave with the Intel C++ compiler under\nlinux as well as in =\r\nWindows with Visual Studio 2008, and encountered\nsegfaults in both cases. I=\r\nn each case I recompiled Cantera using the\ncorresponding compiler. I haven&#39;=\r\nt tried Harry&#39;s code yet to see if I\ncan get it working. Perhaps there&#39;s so=\r\nmething wrong with my makefiles\nfor either Cantera or the demo program.\n\nRa=\r\ny\n\n--- In cantera@yahoogroups.com, James Sutherland &lt;jamessuthe@...&gt; wrote:=\r\n\n&gt;\n&gt; All,\n&gt; \n&gt; I am not sure if my previous message went through or not.  I=\r\n\ncompiled and\n&gt; ran the original code that Ray supplied on my Linux worksta=\r\ntion (gcc\n3.4.x\n&gt; for Cantera and Boost::thread, pathscale for the supplied=\r\n code).  It ran\n&gt; fine on 1, 2, and 4 threads.\n&gt; \n&gt; As for scaling, I have =\r\nseen similar performance issues.  I have not\nfound\n&gt; any speedups for threa=\r\nded parallelism on =B3small=B2 problems where\nthreads do\n&gt; not perform sign=\r\nificant work during their lifetime.  This\nobservation seems\n&gt; to hold for o=\r\npen MP as well as boost::thread (which is mainly a nice\nwrapper\n&gt; around po=\r\nsix for a unix platform).  This observation was for both\ndebug and\n&gt; optimi=\r\nzed code and for both a Mac (dual core intel) and Linux (dual\n&gt; processor, =\r\ndual core intel chipset) desktop.  This observation is\nnot unique\n&gt; to cant=\r\nera applications.  I have other apps where similar symptoms are\n&gt; manifest.=\r\n\n&gt; \n&gt; I am not a thread guru either =AD so if anyone can shed additional\nli=\r\nght on\n&gt; the subject, I would appreciate it as well.\n&gt; \n&gt; James\n&gt; \n&gt; \n&gt; On =\r\n3/26/08 4:44 PM, &quot;Moffat, Harry K&quot; &lt;hkmoffa@...&gt; wrote:\n&gt; \n&gt; &gt;  \n&gt; &gt;  \n&gt; &gt; =\r\n\n&gt; &gt; Hi Ray,\n&gt; &gt;  I duplicated your example using a POSIX threads implement=\r\nation\n(source code\n&gt; &gt; enclosed). I didn&#39;t find any problems with MultiTran=\r\nsport from\nyour direct\n&gt; &gt; example, but there were some issues.\n&gt; &gt; \n&gt; &gt; 1)=\r\n I didn&#39;t find any speedup with using multiple threads\nunfortunately even\n&gt;=\r\n &gt; though I&#39;m using a 2 cpu workstation with 2 cores per cpu ):. I\nwonder w=\r\nhat\n&gt; &gt; I&#39;m doing wrong.\n&gt; &gt; \n&gt; &gt; 2) I got a seg fault at the very end of t=\r\nhe application, iff I\nused more than\n&gt; &gt; 16 threads.\n&gt; &gt; \n&gt; &gt; 3) If I calle=\r\nd newTransport within the threads (see commented out\ncode) rather\n&gt; &gt; than =\r\nsetting up multiple MultiTransport objects before doing the\nparallel\n&gt; &gt; pt=\r\nhreads implementation I ran into segfaults during newTransport.\nThis is\n&gt; &gt;=\r\n definately a multiple threads issue and needs to be looked into.\n&gt; &gt; \n&gt; &gt; =\r\nI&#39;m new to multithreaded applications. Maybe someone could point\nout an iss=\r\nue\n&gt; &gt; with my approach. I did compile using gcc and the -pthread\ncompiler =\r\nswitch.\n&gt; &gt; Essentially I&#39;m following the approach from\n&gt; &gt;  https://comput=\r\ning.llnl.gov/tutorials/pthreads/#Thread\n&gt; &gt; \n&gt; &gt; Best wishes,\n&gt; &gt; Harry\n&gt; &gt;=\r\n \n&gt; &gt; #include &lt;stdio.h&gt;\n&gt; &gt; #include &lt;stdlib.h&gt;\n&gt; &gt; #include &lt;pthread.h&gt;\n&gt;=\r\n &gt; #include &lt;unistd.h&gt;\n&gt; &gt; \n&gt; &gt; #include &lt;Cantera.h&gt;\n&gt; &gt; #include &lt;kernel/I=\r\ndealGasPhase.h&gt;\n&gt; &gt; #include &lt;transport.h&gt;\n&gt; &gt; #include &lt;thermo.h&gt;\n&gt; &gt; \n&gt; &gt;=\r\n using namespace Cantera;\n&gt; &gt; \n&gt; &gt; #define NUM_THREADS 8\n&gt; &gt; #define NUM_TE=\r\nMPS 16*16\n&gt; &gt; \n&gt; &gt; struct pTran {\n&gt; &gt;  int iTemp;\n&gt; &gt;  ThermoPhase *tpBase;=\r\n\n&gt; &gt;  TransportFactory *tfBase;\n&gt; &gt;  ThermoPhase *tpThread;\n&gt; &gt;  Transport =\r\n*p1Thread;\n&gt; &gt; };\n&gt; &gt; \n&gt; &gt; struct pTran ptran[NUM_THREADS];\n&gt; &gt; std::vector=\r\n&lt;double&gt; lambda(NUM_TEMPS, 0.0);\n&gt; &gt; \n&gt; &gt; // unsigned long\n&gt; &gt; pthread_t st=\r\norID[NUM_THREADS];\n&gt; &gt; \n&gt; &gt; const pthread_attr_t *att =3D 0;\n&gt; &gt; \n&gt; &gt; int g=\r\nI =3D 0;\n&gt; &gt; void * startThread(void *rrr) {\n&gt; &gt;  struct pTran *ppp =3D (st=\r\nruct pTran *) rrr;\n&gt; &gt;  //pthread_t sid =3D pthread_self();\n&gt; &gt;  //printf(&quot;=\r\nstarting new thread %ld&#92;n&quot;, sid);\n&gt; &gt;  // fflush(stdout);\n&gt; &gt;  //ThermoPhas=\r\ne *tp =3D (ppp-&gt;tpBase)-&gt;duplMyselfAsThermoPhase();\n&gt; &gt;  //IdealGasPhase *t=\r\nhermoP =3D dynamic_cast &lt;IdealGasPhase *&gt; (tp);\n&gt; &gt;  //Transport *p1 =3D (p=\r\npp-&gt;tfBase)-&gt;newTransport(&quot;Multi&quot;, thermoP);\n&gt; &gt; \n&gt; &gt; ThermoPhase *thermoP =\r\n=3D ppp-&gt;tpThread;\n&gt; &gt;  Transport *p1 =3D ppp-&gt;p1Thread;\n&gt; &gt; \n&gt; &gt; thermoP-&gt;=\r\nsetState_TPY(300.+5. * (ppp-&gt;iTemp), OneAtm, &quot;N2:3.76,\nO2:1.0&quot;);\n&gt; &gt; \n&gt; &gt; l=\r\nambda[ppp-&gt;iTemp] =3D p1-&gt;thermalConductivity();\n&gt; &gt;  //delete p1;\n&gt; &gt;  //d=\r\nelete thermoP;\n&gt; &gt;  pthread_exit((void *) 0);\n&gt; &gt; }\n&gt; &gt; \n&gt; &gt; int main(int a=\r\nrgc, void **argv) {\n&gt; &gt;  pthread_t storID[10];\n&gt; &gt;  void *    retnMsg[10];\n=\r\n&gt; &gt;  pthread_t * ttt;\n&gt; &gt;  const pthread_attr_t * att =3D 0;\n&gt; &gt;  void *tAr=\r\ngs =3D 0;\n&gt; &gt;  tArgs =3D &gI;\n&gt; &gt;  bool doThreads =3D true;\n&gt; &gt; \n&gt; &gt; XML_No=\r\nde *xc =3D get_XML_File(&quot;gri30.xml&quot;);\n&gt; &gt;  XML_Node * const xs =3D xc-&gt;find=\r\nNameID(&quot;phase&quot;, &quot;gri30_multi&quot;);\n&gt; &gt; \n&gt; &gt; TransportFactory * transFac =3D Tr=\r\nansportFactory::factory();\n&gt; &gt;  ThermoPhase *tp =3D newPhase(*xs);\n&gt; &gt;  for=\r\n (int i =3D 0; i &lt; NUM_THREADS; i++) {\n&gt; &gt;  struct pTran *rrr =3D &ptran[i]=\r\n;\n&gt; &gt;  rrr-&gt;tpThread =3D tp-&gt;duplMyselfAsThermoPhase();\n&gt; &gt;  IdealGasPhase =\r\n*thermoP =3D dynamic_cast &lt;IdealGasPhase *&gt;\n(rrr-&gt;tpThread);\n&gt; &gt;  rrr-&gt;p1Th=\r\nread =3D transFac-&gt;newTransport(&quot;Multi&quot;, thermoP);\n&gt; &gt;  }\n&gt; &gt; \n&gt; &gt; clockWC =\r\ntickTock;\n&gt; &gt;  int jTemp =3D 0;\n&gt; &gt;  do {\n&gt; &gt;  if (!doThreads) {\n&gt; &gt;  for (=\r\nint i =3D 0; i &lt; NUM_THREADS; i++) {\n&gt; &gt;  ptran[i].iTemp =3D jTemp;\n&gt; &gt;  pt=\r\nran[i].tpBase =3D tp;\n&gt; &gt;  ptran[i].tfBase =3D transFac;\n&gt; &gt;  startThread((=\r\nvoid *)&ptran[i]);\n&gt; &gt;  jTemp++;\n&gt; &gt;  }\n&gt; &gt;  } else {\n&gt; &gt;  for (int i =3D 0=\r\n; i &lt; NUM_THREADS; i++) {\n&gt; &gt;  ptran[i].iTemp =3D jTemp;\n&gt; &gt;  ptran[i].tpBa=\r\nse =3D tp;\n&gt; &gt;  ptran[i].tfBase =3D transFac;\n&gt; &gt; \n&gt; &gt; int en =3D pthread_c=\r\nreate(&storID[i], att, &startThread, (void\n*)&ptran[i]);\n&gt; &gt;  if (en !=3D 0=\r\n) {\n&gt; &gt;  printf(&quot;Error condition from pthread_create(): %d&#92;n&quot;, en);\n&gt; &gt;  ex=\r\nit(-1);\n&gt; &gt;  }\n&gt; &gt;  //printf(&quot;new thead id =3D %ld&#92;n&quot;, storID[i]);\n&gt; &gt;  jTe=\r\nmp++;\n&gt; &gt;  }\n&gt; &gt;  }\n&gt; &gt;  if (doThreads) {\n&gt; &gt;  for (int i =3D 0; i &lt; NUM_TH=\r\nREADS; i++) {\n&gt; &gt;  ttt =3D &storID[i];\n&gt; &gt;  int rc =3D pthread_join(storID[=\r\ni], &(retnMsg[i]));\n&gt; &gt;  if (rc !=3D 0) {\n&gt; &gt;  printf(&quot;Error condition from=\r\n pthread_jon(): %d&#92;n&quot;, rc);\n&gt; &gt;  exit(-1);\n&gt; &gt;  }\n&gt; &gt;  //printf(&quot;returned f=\r\nrom thread %ld&#92;n&quot;, storID[i]);\n&gt; &gt;  }\n&gt; &gt;  }\n&gt; &gt; \n&gt; &gt; } while (jTemp &lt; NUM_=\r\nTEMPS);\n&gt; &gt;  double tt =3D tickTock.secondsWC();\n&gt; &gt; \n&gt; &gt; std::cout &lt;&lt; &quot;The=\r\nrmal conductivities as a function of temperature:&#92;n&quot;;\n&gt; &gt;  for (int j =3D 0=\r\n; j &lt;  NUM_TEMPS; j++) {\n&gt; &gt;  std::cout &lt;&lt; 300.+5.*j &lt;&lt;&quot; &#92;t &quot; &lt;&lt; lambda[j] =\r\n&lt;&lt; std::endl;\n&gt; &gt;  }\n&gt; &gt;  printf(&quot;elapsed time =3D %g&#92;n&quot;, tt);\n&gt; &gt;  pthread=\r\n_exit(NULL);\n&gt; &gt;  return 0;\n&gt; &gt; }\n&gt; &gt; \n&gt; &gt; Harry Moffat                    =\r\n                         (w) (505)\n844-6912\n&gt; &gt; Nanoscale and Reactive Proc=\r\nesses            (f)   (505) 844-8251\n&gt; &gt; Sandia National Laboratories\n&gt; &gt; =\r\nhkmoffa@... &lt;mailto:hkmoffa%40sandia.gov&gt;\n&gt; &gt; P. O. Box 5800-0836\n&gt; &gt; Albuq=\r\nuerque, NM 87185-0836\n&gt; &gt; \n&gt; &gt; -----Original Message-----\n&gt; &gt; From: cantera=\r\n@yahoogroups.com &lt;mailto:cantera%40yahoogroups.com&gt;\n&gt; &gt; [mailto:cantera@yah=\r\noogroups.com &lt;mailto:cantera%40yahoogroups.com&gt;\n] On Behalf\n&gt; &gt; Of Ray Spet=\r\nh\n&gt; &gt; Sent: Saturday, March 22, 2008 1:25 PM\n&gt; &gt; To: cantera@...=\r\nm &lt;mailto:cantera%40yahoogroups.com&gt;\n&gt; &gt; Subject: [cantera] Thread safety o=\r\nf MultiTransport\n&gt; &gt; \n&gt; &gt; Hi,\n&gt; &gt; \n&gt; &gt; I have been having some issues using=\r\n objects of class\nMultiTransport in a\n&gt; &gt; multithreaded application. Specif=\r\nically, I am having trouble with the\n&gt; &gt; functions thermalConductivity and =\r\nget thermalDiffCoeffs, which\nseem to be the\n&gt; &gt; only two functions which in=\r\nvolve calls to solveLMatrixEquation. I have\n&gt; &gt; included below an example p=\r\nrogram that experiences the problem.\nThe error\n&gt; &gt; reported is (usually)\n&gt; =\r\n&gt; \n&gt; &gt; terminate called after throwing an instance of &#39;Cantera::CanteraErro=\r\nr&#39;\n&gt; &gt; \n&gt; &gt; If the call to omp_set_num_threads(2) is changed to\nomp_set_num=\r\n_threads(1),\n&gt; &gt; the program works fine. This is on a 64-bit Linux machine,=\r\n using\nGCC 4.2. I\n&gt; &gt; have built Cantera with the Thread-safe option turned=\r\n on. Is the\nissue with\n&gt; &gt; these functions, or is there something else I ne=\r\ned to do to be\nable to use\n&gt; &gt; Multitransport objects in a parallel code?\n&gt;=\r\n &gt; \n&gt; &gt; Any help in resolving this would be greatly appreciated.\n&gt; &gt; \n&gt; &gt; -=\r\n---------\n&gt; &gt; \n&gt; &gt; #include &lt;cantera/Cantera.h&gt;\n&gt; &gt; #include &lt;cantera/kerne=\r\nl/IdealGasPhase.h&gt; #include\n&lt;cantera/transport.h&gt;\n&gt; &gt; #include &lt;cantera/the=\r\nrmo.h&gt; #include &lt;omp.h&gt; #include &lt;vector&gt;\n&gt; &gt; \n&gt; &gt; using namespace Cantera;=\r\n\n&gt; &gt; \n&gt; &gt; void omptest(void)\n&gt; &gt; {\n&gt; &gt;  int N =3D 10;\n&gt; &gt;  omp_set_num_thre=\r\nads(2);\n&gt; &gt; \n&gt; &gt; XML_Node *xc =3D get_XML_File(&quot;gri30.xml&quot;);\n&gt; &gt;  XML_Node =\r\n* const xs =3D xc-&gt;findNameID(&quot;phase&quot;, &quot;gri30_multi&quot;);\n&gt; &gt; \n&gt; &gt; std::vector=\r\n&lt;IdealGasPhase*&gt; thermoP(N);\n&gt; &gt;  std::vector&lt;MultiTransport*&gt; transportP(N=\r\n);\n&gt; &gt; \n&gt; &gt; TransportFactory* transFac =3D TransportFactory::factory();\n&gt; &gt;=\r\n \n&gt; &gt; for (int i=3D0; i&lt;N; i++) {\n&gt; &gt;  ThermoPhase* tp =3D newPhase(*xs);\n&gt;=\r\n &gt;  thermoP[i] =3D dynamic_cast &lt;IdealGasPhase*&gt;(tp);\n&gt; &gt;  Transport* p1 =\r\n=3D transFac-&gt;newTransport(&quot;Multi&quot;,thermoP[i]);\n&gt; &gt;  transportP[i] =3D dyna=\r\nmic_cast &lt;MultiTransport*&gt;(p1);\n&gt; &gt;  }\n&gt; &gt; \n&gt; &gt; #pragma omp parallel for\n&gt; =\r\n&gt;  for (int i=3D0; i&lt;N; i++) {\n&gt; &gt;  thermoP[i]-&gt;setState_TPY(300+50*i,OneAt=\r\nm,&quot;N2:3.76, O2:1.0&quot;);\n&gt; &gt;  }\n&gt; &gt; \n&gt; &gt; std::vector&lt;double&gt; lambda(N);\n&gt; &gt; \n&gt;=\r\n &gt; #pragma omp parallel for\n&gt; &gt;  for (int i=3D0; i&lt;N; i++) {\n&gt; &gt;  lambda[i]=\r\n =3D transportP[i]-&gt;thermalConductivity();\n&gt; &gt;  }\n&gt; &gt; \n&gt; &gt; for (int i=3D0; =\r\ni&lt;N; i++) {\n&gt; &gt;  std::cout &lt;&lt; lambda[i] &lt;&lt; std::endl;\n&gt; &gt;  }\n&gt; &gt; }\n&gt; &gt; \n&gt; &gt;=\r\n int main(int argc, char** argv)\n&gt; &gt; {\n&gt; &gt;  try {\n&gt; &gt;  omptest();\n&gt; &gt;  } ca=\r\ntch (CanteraError) {\n&gt; &gt;  showErrors(cout);\n&gt; &gt;  }\n&gt; &gt; }\n&gt; &gt; \n&gt; &gt; ---------=\r\n---------------------------\n&gt; &gt; \n&gt; &gt; Yahoo! Groups Links\n&gt; &gt; \n&gt; &gt;  \n&gt; &gt;\n&gt;\n\n=\r\n\n\n"}}