{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":44728387,"authorName":"David Goodwin","from":"David Goodwin &lt;dgoodwin@...&gt;","profile":"dggoodwin","replyTo":"LIST","senderId":"Qwjnn5EAWMNfMlE5WSNYXHOoHeEpBcAWUUyJGNFm-fRVex117HtBtw10rJMgAi5Lig-RDf6qDkKXFNUvhTJs217XhP2DTDV-oWHe","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [cantera] memory leak","postDate":"1105010176","msgId":657,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDYxQkM1MzcwLTVGRDQtMTFEOS1CNjMzLTAwMEQ5M0FFMjQxQUBjYWx0ZWNoLmVkdT4=","inReplyToHeader":"PDVmY2RiYTIwNTAxMDMwMzU0NWYzYzA4MzZAbWFpbC5nbWFpbC5jb20+","referencesHeader":"PDVmY2RiYTIwNTAxMDMwMzU0NWYzYzA4MzZAbWFpbC5nbWFpbC5jb20+"},"prevInTopic":656,"nextInTopic":0,"prevInTime":656,"nextInTime":658,"topicId":646,"numMessagesInTopic":5,"msgSnippet":"Martin, I found and fixed 2 memory leaks.  One was in the assignment operators in the vector classes in ctvector.cpp, and the other was in showSolution in","rawEmail":"Return-Path: &lt;dgoodwin@...&gt;\r\nX-Sender: dgoodwin@...\r\nX-Apparently-To: cantera@yahoogroups.com\r\nReceived: (qmail 19187 invoked from network); 6 Jan 2005 11:17:16 -0000\r\nReceived: from unknown (66.218.66.167)\n  by m7.grp.scd.yahoo.com with QMQP; 6 Jan 2005 11:17:16 -0000\r\nReceived: from unknown (HELO outgoing-mail.its.caltech.edu) (131.215.49.69)\n  by mta6.grp.scd.yahoo.com with SMTP; 6 Jan 2005 11:17:16 -0000\r\nReceived: from fire-dog (fire-dog [192.168.1.4])\n\tby earth-ox-postvirus (Postfix) with ESMTP id 7A422109E62\n\tfor &lt;cantera@yahoogroups.com&gt;; Thu,  6 Jan 2005 03:16:46 -0800 (PST)\r\nReceived: from water-ox ([192.168.1.10])\n\tby fire-dog (MailMonitor for SMTP v1.2.2 ) ;\n\tThu, 6 Jan 2005 03:16:45 -0800 (PST)\r\nReceived: from [10.0.1.2] (charter-241-015.caltech.edu [131.215.241.15])\n\tby water-ox.its.caltech.edu (Postfix) with ESMTP id 855D726AEE7\n\tfor &lt;cantera@yahoogroups.com&gt;; Thu,  6 Jan 2005 03:16:45 -0800 (PST)\r\nMime-Version: 1.0 (Apple Message framework v619)\r\nIn-Reply-To: &lt;5fcdba205010303545f3c0836@...&gt;\r\nReferences: &lt;5fcdba205010303545f3c0836@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed\r\nMessage-Id: &lt;61BC5370-5FD4-11D9-B633-000D93AE241A@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nDate: Thu, 6 Jan 2005 03:16:16 -0800\r\nTo: cantera@yahoogroups.com\r\nX-Mailer: Apple Mail (2.619)\r\nX-Spam-Status: No, hits=0.0 tagged_above=-100000.0 required=5.0 \r\nX-Spam-Level: \r\nX-eGroups-Remote-IP: 131.215.49.69\r\nFrom: David Goodwin &lt;dgoodwin@...&gt;\r\nSubject: Re: [cantera] memory leak\r\nX-Yahoo-Group-Post: member; u=44728387\r\nX-Yahoo-Profile: dggoodwin\r\n\r\nMartin,\n\nI found and fixed 2 memory leaks.  One was in the assignment operators \nin the vector classes in ctvector.cpp, and the other was in \nshowSolution in oneD/StFlow.cpp. Now the C++ examples flamespeed.cpp \nand kinetics1.cpp are verified to have no leaks.  I have a feeling this \nwill solve your memory leak problem too.  The updated files are in the \nCVS repository.\n\nDave\n\n\nOn Jan 3, 2005, at 3:54 AM, martin olausson wrote:\n\n&gt; Hi,\n&gt;\n&gt; As I mentioned in a previous mail I&#39;m trying to use Cantera in fluent.\n&gt; I now have a minor memory leak problem etc. I&#39;m using Cantera to\n&gt; calculate an effective reaction rate by integrating the concentrations\n&gt; in each cell to the next time step defined in fluent, and then\n&gt; comparing the concentrations before and after. This way the\n&gt; fluent-simulations are very stable. It&#39;s a bit time consuming but that\n&gt; is not the problem right now...\n&gt; I noticed that if I define new Cantera objects in each cell, Reactor,\n&gt; Wall, Environment, ReactorNet, the memory is consumed even if I delete\n&gt; them after they are used. I then tried to reuse them by updating the\n&gt; composition with &quot;setThermoMgr&quot;. If &quot;r&quot; is a static Reactor used in\n&gt; each cell in fluent, I&#39;m updating the composition defined in &quot;gas&quot;\n&gt; like this:\n&gt;\n&gt; r-&gt;setThermoMgr(*gas);\n&gt;\n&gt; This works fine for a while then, the simulations in Cantera takes\n&gt; longer and longer time. This is noticed after using the same objects\n&gt; about 10 000 times.\n&gt; So if I&#39;m defining new objects once in a while, every second iteration\n&gt; in fluent, it works fine for a week or so until the memory is\n&gt; consumed. If I restart fluent it works fine for another week...\n&gt;\n&gt; Does anyone know what&#39;s the cause of any of these two problems, the\n&gt; memory leak or that Cantera simulations takes longer and longer time\n&gt; when reusing objects?\n&gt;\n&gt; The cpp-program that is called by the UDF in fluent is attached to the\n&gt; mail. The &quot;CanteraInitFkn&quot; is called in the beginning of each\n&gt; iteration in fluent, and the &quot;getCanteraReactionData&quot; is called in\n&gt; each cell in the grid.\n&gt;\n&gt;\n&gt; Regards,\n&gt; Martin Olausson\n&gt;\n&gt;\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; &lt;canteraQuestion.txt&gt;\n\n\n\n"}}