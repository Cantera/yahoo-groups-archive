{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":310228072,"authorName":"avmokhov","from":"&quot;avmokhov&quot; &lt;avmokhov@...&gt;","profile":"avmokhov","replyTo":"LIST","senderId":"SCpHNlTvLFIZcSJZoDMJB_JftWDOcxtrYyJyT4OsnWIU60XD9grQvOotJqTs5HwAG-3t2Rbwh1zTjcw-9Y3MhXUOaeiUiQ","spamInfo":{"isSpam":false,"reason":"6"},"subject":"Re: copy constructor for IdealGasMix is broken?","postDate":"1203020044","msgId":1838,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGZwMjdlYysybmp0QGVHcm91cHMuY29tPg==","inReplyToHeader":"PDgxOUU3MjEzLTkzNDEtNEZEOS1COTdBLTFFNTNBMUQ4MzAwRUBjYWx0ZWNoLmVkdT4="},"prevInTopic":1837,"nextInTopic":1839,"prevInTime":1837,"nextInTime":1839,"topicId":1831,"numMessagesInTopic":10,"msgSnippet":"Hello, While I admit that bindings to Python and Matlab are of paramount importance, it is quite pitiful that C++ core should suffer from this. It seems for me","rawEmail":"Return-Path: &lt;avmokhov@...&gt;\r\nX-Sender: avmokhov@...\r\nX-Apparently-To: cantera@yahoogroups.com\r\nX-Received: (qmail 21864 invoked from network); 14 Feb 2008 20:14:07 -0000\r\nX-Received: from unknown (66.218.67.96)\n  by m54.grp.scd.yahoo.com with QMQP; 14 Feb 2008 20:14:07 -0000\r\nX-Received: from unknown (HELO n38a.bullet.mail.sp1.yahoo.com) (66.163.168.132)\n  by mta17.grp.scd.yahoo.com with SMTP; 14 Feb 2008 20:14:07 -0000\r\nX-Received: from [216.252.122.218] by n38.bullet.mail.sp1.yahoo.com with NNFMP; 14 Feb 2008 20:14:07 -0000\r\nX-Received: from [209.73.164.86] by t3.bullet.sp1.yahoo.com with NNFMP; 14 Feb 2008 20:14:07 -0000\r\nX-Received: from [66.218.67.199] by t8.bullet.scd.yahoo.com with NNFMP; 14 Feb 2008 20:14:07 -0000\r\nDate: Thu, 14 Feb 2008 20:14:04 -0000\r\nTo: cantera@yahoogroups.com\r\nMessage-ID: &lt;fp27ec+2njt@...&gt;\r\nIn-Reply-To: &lt;819E7213-9341-4FD9-B97A-1E53A1D8300E@...&gt;\r\nUser-Agent: eGroups-EW/0.82\r\nMIME-Version: 1.0\r\nContent-Type: text/plain; charset=&quot;ISO-8859-1&quot;\r\nContent-Transfer-Encoding: quoted-printable\r\nX-Mailer: Yahoo Groups Message Poster\r\nX-Yahoo-Newman-Property: groups-compose\r\nX-eGroups-Msg-Info: 1:6:0:0:0\r\nFrom: &quot;avmokhov&quot; &lt;avmokhov@...&gt;\r\nSubject: Re: copy constructor for IdealGasMix is broken?\r\nX-Yahoo-Group-Post: member; u=310228072; y=XKJN5ZnOb9OrNJOiee9xik3ueluLSAyijSjt6ssbChUBIkE\r\nX-Yahoo-Profile: avmokhov\r\n\r\nHello,\n\nWhile I admit that bindings to Python and Matlab are of paramount \n=\r\nimportance, it is quite pitiful that C++ core should suffer from \nthis. It =\r\nseems for me that all possible problems with the copy \nconstructing of the =\r\nideal gas object are due to design decision to \ninherit the ideal gas class=\r\n from thermodynamic and kinetic base \nclasses. Multiple inheritance should =\r\nbe used only when an object \nincludes properties of two base classes. While=\r\n the ideal gas \ncertainly has thermodynamic properties such as temperature,=\r\n pressure \netc., its relation with kinetic mechanism is not so direct. Woul=\r\nd the \nideal gas class inherited only from the thermodynamic base (or even =\r\n\nbetter not from both), the problems with interfaces were avoided.\n\nBest re=\r\ngards, Anatoli\n\n--- In cantera@yahoogroups.com, Dave Goodwin &lt;dgoodwin@...&gt;=\r\n wrote:\n&gt;\n&gt; I think we also need to keep in mind that we are not just writi=\r\nng \nfor  \n&gt; C++ &quot;power users.&quot;  Essentially all useful eqs of state should =\r\nbe  \n&gt; accessible from the other interfaces too, and so shouldn&#39;t rely  \n&gt; =\r\noverly on special features (e.g. operator overloading) in C++.  Or \nat  \n&gt; =\r\nthe very least, these things should be kept out of the kernel, and  \n&gt; only=\r\n used in the C++ interface files (Cantera/cxx/*).\n&gt; \n&gt; Dave\n&gt; \n&gt; \n&gt; On Feb =\r\n13, 2008, at 2:15 PM, Moffat, Harry K wrote:\n&gt; \n&gt; &gt; Hi,\n&gt; &gt;   copy construc=\r\ntors and assignment operators are implemented for \nthe\n&gt; &gt; thermo routines,=\r\n but not for the kinetics operator. That&#39;s why the\n&gt; &gt; thermo part of the c=\r\nopy worked, but not the kinetics part.\n&gt; &gt;\n&gt; &gt; I agree with Dave that there=\r\n&#39;s a definite cost and potential  \n&gt; &gt; pitfalls to\n&gt; &gt; developing and maint=\r\naining them. There should be a definite \nreason for\n&gt; &gt; their implementatio=\r\nn.\n&gt; &gt;\n&gt; &gt; I had in the back of my mind, at one point, the case of solving\n=\r\n&gt; &gt; equilibrium problems with miscibility gaps, where the thermo \nphase  \n&gt;=\r\n &gt; would\n&gt; &gt; need to be split into two (e.g., III-V compound semiconductors=\r\n \nwhich\n&gt; &gt; obey the regular solution model) for some parameter regimes. I =\r\n\nhaven&#39;t\n&gt; &gt; gotten there yet, though, in terms of automagically splitting =\r\n\nthe  \n&gt; &gt; phase\n&gt; &gt; where appropriate.\n&gt; &gt;\n&gt; &gt; There&#39;s a diamondSurf_dupl =\r\ntest example that exercises the thermo\n&gt; &gt; assignment operator.\n&gt; &gt;\n&gt; &gt; Bes=\r\nt wishes,\n&gt; &gt; Harry Moffat\n&gt; &gt;\n&gt; &gt; Harry Moffat                            =\r\n                 (w) (505)\n&gt; &gt; 844-6912\n&gt; &gt; Nanoscale and Reactive Processe=\r\ns            (f)   (505) 844-8251\n&gt; &gt; Sandia National Laboratories\n&gt; &gt; hkmo=\r\nffa@...\n&gt; &gt; P. O. Box 5800-0836\n&gt; &gt; Albuquerque, NM 87185-0836\n&gt; &gt;\n&gt; &gt; ----=\r\n-Original Message-----\n&gt; &gt; From: cantera@yahoogroups.com [mailto:cantera@ya=\r\nhoogroups.com] \nOn  \n&gt; &gt; Behalf\n&gt; &gt; Of yarmond\n&gt; &gt; Sent: Wednesday, Februar=\r\ny 13, 2008 9:33 AM\n&gt; &gt; To: cantera@yahoogroups.com\n&gt; &gt; Subject: [cantera] R=\r\ne: copy constructor for IdealGasMix is broken?\n&gt; &gt;\n&gt; &gt; Dave,\n&gt; &gt;\n&gt; &gt; Thanks=\r\n for the explanation. Is there any chance that the copy\n&gt; &gt; constructor wil=\r\nl be implemented? I was hoping to be able to use  \n&gt; &gt; them in\n&gt; &gt; some of =\r\nthe standard container classes, e.g. std::vector or \nstd::list,\n&gt; &gt; but I d=\r\non&#39;t think this is possible without a functional copy\n&gt; &gt; constructor.\n&gt; &gt;\n=\r\n&gt; &gt; Also, it would be nice to repeatedly read the input file from \ndisk. Is=\r\n\n&gt; &gt; there a way to at least avoid this? I wasn&#39;t able to follow the\n&gt; &gt; do=\r\ncumentation well enough to know if this is possible.\n&gt; &gt;\n&gt; &gt; Thanks,\n&gt; &gt; Ra=\r\ny\n&gt; &gt;\n&gt; &gt; --- In cantera@yahoogroups.com, Dave Goodwin &lt;dgoodwin@&gt; wrote:\n&gt;=\r\n &gt;&gt;\n&gt; &gt;&gt; The reason for this is that Cantera builds complete objects for  \n=\r\n&gt; &gt;&gt; use in\n&gt; &gt;\n&gt; &gt;&gt; C++ code from CTI or XML input files.  This maintains =\r\n\nconsistency  \n&gt; &gt;&gt; with\n&gt; &gt;\n&gt; &gt;&gt; objects created from Python, Matlab, or F=\r\nortran.\n&gt; &gt;&gt;\n&gt; &gt;&gt; The classes in the Cantera kernel (those in &quot;Cantera/src/=\r\n*&quot; \nshould\n&gt; &gt;&gt; never be instantiated from copy constructors, but always fr=\r\nom \nan  \n&gt; &gt;&gt; input\n&gt; &gt;\n&gt; &gt;&gt; file or from a factory method designed for thi=\r\ns purpose.  At the \nC++\n&gt; &gt;&gt; interface level (those files in Cantera/cxx/in=\r\nclude/cantera, \nmany of\n&gt; &gt;&gt; the classes derive from multiple kernel classe=\r\ns, to provide (for\n&gt; &gt;&gt; convenience only)  a single object that represents =\r\nthe \nthermodynamic\n&gt; &gt;&gt; properties (equation of state) and the kinetics, at=\r\n least for\n&gt; &gt;&gt; homogeneous kinetics. I am in the process of changing the \n=\r\nnamespace\n&gt; &gt;&gt; these classes live in to &quot;Cantera_CXX&quot; to help avoid these  =\r\n\n&gt; &gt;&gt; confusions.\n&gt; &gt;&gt;\n&gt; &gt;&gt; But still, I advise against using copy construc=\r\ntors or assignment\n&gt; &gt;&gt; operators... These often cause more problems than t=\r\nhey solve!!\n&gt; &gt;&gt;\n&gt; &gt;&gt; Dave\n&gt; &gt;&gt;\n&gt; &gt;&gt; The CVS repository will soon reflect t=\r\nhe namespace changes but \ndoes\n&gt; &gt;&gt; not yet...\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;&gt; On Feb 1=\r\n3, 2008, at 5:32 AM, avmokhov wrote:\n&gt; &gt;&gt;\n&gt; &gt;&gt;&gt; Hi,\n&gt; &gt;&gt;&gt; You can not use a=\r\n copy constructor for an ideal gas mixture \nbecause\n&gt; &gt;&gt;&gt; the assignment op=\r\nerator is (still) not implemented. If you put \ntry -\n&gt; &gt;\n&gt; &gt;&gt;&gt; catch block =\r\nyou will catch a Cantera exception.\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; Best regards, Anatoli\n&gt; &gt;&gt;&gt;=\r\n\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; --- In cantera@yahoogroups.com, &quot;yarmond&quot; &lt;yarmond@&gt; wrote:\n&gt; =\r\n&gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; I am having some issues when trying to copy IdealGasMix \nobject=\r\ns.\n&gt; &gt;&gt;&gt; From\n&gt; &gt;&gt;&gt;&gt; looking at the header files, it seems that the copy \nc=\r\nonstructor is\n&gt; &gt;&gt;&gt;&gt; intended to be usable, but I have been getting some un=\r\nexpected\n&gt; &gt;&gt;&gt; results\n&gt; &gt;&gt;&gt;&gt; from the following code example:\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;=\r\n&gt; Cantera::IdealGasMix gas1(&quot;gri30.xml&quot;); int n=3Dgas1.nSpecies();\n&gt; &gt;&gt;&gt;&gt; g=\r\nas1.setState_TPX(600,Cantera::OneAtm,&quot;O2:1.0, CH4:0.5, \nN2:3.76&quot;);\n&gt; &gt;&gt;&gt;&gt; v=\r\nector&lt;double&gt; wdot1(n), wdot2(n);\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; Cantera::IdealGasMix gas2(g=\r\nas1);\n&gt; &gt;&gt;&gt;&gt; gas2.setState_TPX(800,Cantera::OneAtm,&quot;AR:1.0&quot;);\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt;=\r\n gas1.getNetProductionRates(&wdot1[0]);\n&gt; &gt;&gt;&gt;&gt; gas2.getNetProductionRates(&=\r\nwdot2[0]);\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; std::cout &lt;&lt; gas1.cv_mass() &lt;&lt; &quot;, &quot; &lt;&lt; gas2.cv_mas=\r\ns() &lt;&lt; \nstd::endl;\n&gt; &gt;\n&gt; &gt;&gt;&gt;&gt; for (int i=3D0; i&lt;n; i++) {\n&gt; &gt;&gt;&gt;&gt; \tstd::cout=\r\n &lt;&lt; wdot1[i] &lt;&lt; &quot;, &quot; &lt;&lt; wdot2[i] &lt;&lt; std::endl; }\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; gas1.setStat=\r\ne_TPX(600,Cantera::OneAtm,&quot;H2:1.0, O2:0.5, \nN2:3.76&quot;);\n&gt; &gt;&gt;&gt;&gt; gas1.getNetPr=\r\noductionRates(&wdot1[0]);\n&gt; &gt;&gt;&gt;&gt; gas2.getNetProductionRates(&wdot2[0]);\n&gt; &gt;=\r\n&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; std::cout &lt;&lt; gas1.cv_mass() &lt;&lt; &quot;, &quot; &lt;&lt; gas2.cv_mass() &lt;&lt; \nstd::e=\r\nndl;\n&gt; &gt;\n&gt; &gt;&gt;&gt;&gt; for (int i=3D0; i&lt;n; i++) {\n&gt; &gt;&gt;&gt;&gt; \tstd::cout &lt;&lt; wdot1[i] &lt;=\r\n&lt; &quot;, &quot; &lt;&lt; wdot2[i] &lt;&lt; std::endl; }\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;&gt; The measurement of cv seem=\r\ns to work for both mixtures, but \nwhen the\n&gt; &gt;\n&gt; &gt;&gt;&gt;&gt; production rates are =\r\nrequested for gas2, it returns the same \nvalues\n&gt; &gt;&gt;&gt; as\n&gt; &gt;&gt;&gt;&gt; for gas1, e=\r\nven when the state of gas1 is later changed.\n&gt; &gt;&gt;&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;=\r\n\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt; Yahoo! Groups Links\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;&gt;\n&gt; &gt;&gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;=\r\n\n&gt; &gt; Yahoo! Groups Links\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; Yahoo! Groups =\r\nLinks\n&gt; &gt;\n&gt; &gt;\n&gt; &gt;\n&gt;\n\n\n\n"}}