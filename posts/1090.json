{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":44728387,"authorName":"David Goodwin","from":"David Goodwin &lt;dgoodwin@...&gt;","profile":"dggoodwin","replyTo":"LIST","senderId":"IachM6U6iaXauohn08222tnDYkmwyAtzirlP6RMWvsncGsikDQ35wcvBkmOOyFtA7JXLerRy8RxF5MLIYX08NS3JbbocTUgItP1D","spamInfo":{"isSpam":false,"reason":"12"},"subject":"Re: [cantera] Time-stepping/steady-state tolerances","postDate":"1136504247","msgId":1090,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PGMwMDBmMWQ1NTA1ZTY1YTI5YzM2NDAwZGRlYWIyZTM1QGNhbHRlY2guZWR1Pg==","inReplyToHeader":"PDEzMkNDMTIzRENCODhBNEQ4QkExQURBRDI1MEUyNjRGMkFGRTI1QG9seW1wb3MxLnR5cnZvcy5jYWx0ZWNoLmVkdT4=","referencesHeader":"PDEzMkNDMTIzRENCODhBNEQ4QkExQURBRDI1MEUyNjRGMkFGRTI1QG9seW1wb3MxLnR5cnZvcy5jYWx0ZWNoLmVkdT4="},"prevInTopic":1089,"nextInTopic":0,"prevInTime":1089,"nextInTime":1091,"topicId":1089,"numMessagesInTopic":2,"msgSnippet":"Jeff, Yes, I found this problem a little while ago and fixed it. It should be correct in the latest version in the CVS repository. Dave","rawEmail":"Return-Path: &lt;dgoodwin@...&gt;\r\nX-Sender: dgoodwin@...\r\nX-Apparently-To: cantera@yahoogroups.com\r\nReceived: (qmail 17335 invoked from network); 5 Jan 2006 23:37:59 -0000\r\nReceived: from unknown (66.218.66.172)\n  by m27.grp.scd.yahoo.com with QMQP; 5 Jan 2006 23:37:59 -0000\r\nReceived: from unknown (HELO outgoing-mail.its.caltech.edu) (131.215.239.19)\n  by mta4.grp.scd.yahoo.com with SMTP; 5 Jan 2006 23:37:59 -0000\r\nReceived: from localhost (water-dog [192.168.1.26])\n\tby fire-ox-postvirus (Postfix) with ESMTP id 4AC603531C\n\tfor &lt;cantera@yahoogroups.com&gt;; Thu,  5 Jan 2006 15:37:28 -0800 (PST)\r\nReceived: from [10.0.1.2] (charter-241-094.caltech.edu [131.215.241.94])\n\t(using TLSv1 with cipher RC4-SHA (128/128 bits))\n\t(No client certificate requested)\n\tby fire-ox.its.caltech.edu (Postfix) with ESMTP id 70FE5353A3\n\tfor &lt;cantera@yahoogroups.com&gt;; Thu,  5 Jan 2006 15:37:27 -0800 (PST)\r\nMime-Version: 1.0 (Apple Message framework v623)\r\nIn-Reply-To: &lt;132CC123DCB88A4D8BA1ADAD250E264F2AFE25@...&gt;\r\nReferences: &lt;132CC123DCB88A4D8BA1ADAD250E264F2AFE25@...&gt;\r\nContent-Type: text/plain; charset=US-ASCII; format=flowed\r\nMessage-Id: &lt;c000f1d5505e65a29c36400ddeab2e35@...&gt;\r\nContent-Transfer-Encoding: 7bit\r\nDate: Thu, 5 Jan 2006 15:37:27 -0800\r\nTo: cantera@yahoogroups.com\r\nX-Mailer: Apple Mail (2.623)\r\nX-Spam-Scanned: at Caltech-ITS on water-dog by amavisd-2.3.2 \r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: David Goodwin &lt;dgoodwin@...&gt;\r\nSubject: Re: [cantera] Time-stepping/steady-state tolerances\r\nX-Yahoo-Group-Post: member; u=44728387; y=hMMDj7KIooHKbQ9ixjj_jvfSoIuYB2VH7mweoeZaWfG7\r\nX-Yahoo-Profile: dggoodwin\r\n\r\nJeff,\n\nYes, I found this problem a little while ago and fixed it. It should be \ncorrect in the latest version in the CVS repository.\n\nDave\n\n\nOn Jan 5, 2006, at 3:00 PM, Bergthorson, Jeffrey M. wrote:\n\n&gt;\n&gt; Dear Cantera users,\n&gt;\n&gt; I am simulating stagnation-point flames.  I have run across what I\n&gt; believe to be an inconsistency in the specification of time-stepping \n&gt; and\n&gt; steady-state tolerances.  From my understanding, the time-stepping\n&gt; tolerances should only control the time-stepping portion of the solver,\n&gt; while the steady-state tolerances will determine the accuracy of the\n&gt; solution with the Newton solver.  However, if I run the simulation\n&gt; twice, changing only the time-stepping tolerances, I end up with a\n&gt; different steady-state solution.  The case with the &quot;looser&quot;\n&gt; time-stepping tolerances converges much quicker.  If I do the same\n&gt; thing, but change only the steady-state tolerances, the final solutions\n&gt; are the same and the solution takes basically the same time.\n&gt;\n&gt; From these tests, I think that all tolerances in the problem are being\n&gt; set equal to the time-stepping tolerances, and specifying the\n&gt; steady-state tolerances has no effect.  I am running the simulations\n&gt; using python.  I have followed the path of the f.set(tol = tol_ss,\n&gt; tol_time = tol_ts) command from StagnationFlow.py through onedim.py to\n&gt; Domain1D.h.  However, I cannot see where the source of the problem is.\n&gt;\n&gt; It appears to be a more general problem than the StagnationFlow class\n&gt; and could affect all one-dimensional simulations.\n&gt;\n&gt; Any help on this would be greatly appreciated.\n&gt;\n&gt; Happy New Year,\n&gt;\n&gt; Jeffrey M. Bergthorson\n&gt; Postdoctoral Scholar in Aeronautics\n&gt; California Institute of Technology\n&gt; Pasadena, CA, 91106\n&gt; 626.395.4445 (phone)\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt; Yahoo! Groups Links\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n&gt;\n\n\n"}}