{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":166205446,"authorName":"Sergey Cheskis","from":"Sergey Cheskis &lt;cheskis@...&gt;","profile":"scheskis","replyTo":"LIST","senderId":"8EkSeB3jRXqXj6DFJ2u2nCfjdOLsulpDaHCw-1DsLzq2h24X4cPADEobR8WbjIftKsUcdomx_Hydn6UBzpF-WkMBYsS15x-UMxyVD0Lk","spamInfo":{"isSpam":false,"reason":"0"},"subject":"Re: [cantera] fixed temperature profile","postDate":"1150035338","msgId":1252,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PDIwMDYwNjExMTcxNS4zODM5My5jaGVza2lzQHBvc3QudGF1LmFjLmlsPg==","inReplyToHeader":"PEZGM0Q4OEJBLUIyNjYtNDE3OS1CQzIzLTMyMzhDMUQ3RUZEM0BjYWx0ZWNoLmVkdT4=","referencesHeader":"PDIwMDYwNjEwMTAyMi4xNzQwNC5jaGVza2lzQHBvc3QudGF1LmFjLmlsPiA8RkYzRDg4QkEtQjI2Ni00MTc5LUJDMjMtMzIzOEMxRDdFRkQzQGNhbHRlY2guZWR1Pg=="},"prevInTopic":1251,"nextInTopic":0,"prevInTime":1251,"nextInTime":1253,"topicId":1249,"numMessagesInTopic":4,"msgSnippet":"Dave, Thank you very much. I ve check it with my experimental temperature profile and the difference with chemkin is less than 1.5% (only for some radicals and","rawEmail":"Return-Path: &lt;cheskis@...&gt;\r\nX-Sender: cheskis@...\r\nX-Apparently-To: cantera@yahoogroups.com\r\nReceived: (qmail 61145 invoked from network); 11 Jun 2006 14:22:11 -0000\r\nReceived: from unknown (66.218.67.33)\n  by m29.grp.scd.yahoo.com with QMQP; 11 Jun 2006 14:22:11 -0000\r\nReceived: from unknown (HELO post.tau.ac.il) (132.66.16.11)\n  by mta7.grp.scd.yahoo.com with SMTP; 11 Jun 2006 14:22:01 -0000\r\nReceived: from vams.tau.ac.il (localhost.localdomain [127.0.0.1])\n\tby VAMS.dummy (Postfix) with SMTP id 7C65F33A64B\n\tfor &lt;cantera@yahoogroups.com&gt;; Sun, 11 Jun 2006 17:15:38 +0300 (IDT)\r\nReceived: from cheskis1 (cheskis1.tau.ac.il [132.66.145.6])\n\tby post.tau.ac.il (Postfix) with ESMTP id 6CF1033A64B\n\tfor &lt;cantera@yahoogroups.com&gt;; Sun, 11 Jun 2006 17:15:38 +0300 (IDT)\r\nOrganization: Tel Aviv University\r\nTo: cantera@yahoogroups.com\r\nDate: Sun, 11 Jun 2006 17:15:38 +0300\r\nUser-Agent: KMail/1.9.1\r\nReferences: &lt;200606101022.17404.cheskis@...&gt; &lt;FF3D88BA-B266-4179-BC23-3238C1D7EFD3@...&gt;\r\nIn-Reply-To: &lt;FF3D88BA-B266-4179-BC23-3238C1D7EFD3@...&gt;\r\nMIME-Version: 1.0\r\nContent-Type: text/plain;\n  charset=&quot;utf-8&quot;\r\nContent-Transfer-Encoding: 7bit\r\nContent-Disposition: inline\r\nMessage-Id: &lt;200606111715.38393.cheskis@...&gt;\r\nX-eGroups-Msg-Info: 1:0:0:0\r\nFrom: Sergey Cheskis &lt;cheskis@...&gt;\r\nReply-To: cheskis@...\r\nSubject: Re: [cantera] fixed temperature profile\r\nX-Yahoo-Group-Post: member; u=166205446; y=N_Qs9uqsRY-ZEgn0aWLeloeOI9lWqLSHVnWkP8BFa7x99_Q\r\nX-Yahoo-Profile: scheskis\r\n\r\nDave, \nThank you very much.\nI&#39;ve check it with my experimental temperature profile and the difference with \nchemkin is less than 1.5% (only for some radicals and locations, usually much \nless than it).\nSergey.\n\n\nOn Saturday 10 June 2006 20:02, David Goodwin wrote:\n&gt; Actually, its not as complicated as I indicated in my last message.\n&gt; All you have to do is call method &#39;setFixedTempProfile(zvalues,\n&gt; Tvalues)&#39; of the &#39;flame&#39; member of the &#39;BurnerFlame&#39; object before\n&gt; calling solve.  Shown below is a modified version of &#39;flame2.py&#39; that\n&gt; does this by reading in temperature data from an external file.  This\n&gt; script has now been added to the Python flame examples.\n&gt;\n&gt;\n&gt; ------------------------------------------------------------------------\n&gt; -------\n&gt; #\n&gt; # FIXED_T_FLAME - A burner-stabilized, premixed methane/air flat flame\n&gt; #                 with multicomponent transport properties and a\n&gt; specified\n&gt; #                 temperature profile\n&gt; #\n&gt; from Cantera import *\n&gt; from Cantera.OneD import *\n&gt; from Cantera.OneD.BurnerFlame import BurnerFlame\n&gt; from string import atof\n&gt;\n&gt;\n&gt; # read temperature vs. position data from a file.\n&gt; # The file is assumed to have one z, T pair per line, separated by a\n&gt; comma.\n&gt;\n&gt; def getTempData(filename):\n&gt;      # open the file containing the temperature data for reading\n&gt;      f = open(filename)\n&gt;      z = []\n&gt;      t = []\n&gt;      lines = f.readlines()\n&gt;\n&gt;      # check for unix/Windows/Mac line ending problems\n&gt;      if len(lines) == 1:\n&gt;          print &#39;Warning: only one line found. Possible text file line-\n&gt; ending&#39;\n&gt;          print &#39;problem?&#39;\n&gt;          print &#39;The one line found is: &#39;,lines[0]\n&gt;\n&gt;\n&gt;      for line in lines:\n&gt;          if line[0] == &#39;#&#39;:   # use &#39;#&#39; as the comment character\n&gt;              pass\n&gt;          else:\n&gt;              try:\n&gt;                  zval, tval = line.split(&#39;,&#39;)\n&gt;                  z.append(atof(zval))\n&gt;                  t.append(atof(tval))\n&gt;              except:\n&gt;                  pass\n&gt;      print &#39;read&#39;,len(z),&#39;temperature values.&#39;\n&gt;      f.close()\n&gt;\n&gt;      # convert z values into non-dimensional relative positions.\n&gt;      n = len(z)\n&gt;      zmax = z[n-1]\n&gt;      for i in range(n):\n&gt;          z[i] = z[i]/zmax\n&gt;\n&gt;      return [z,t]\n&gt;\n&gt;\n&gt;\n&gt; ################################################################\n&gt; #\n&gt; # parameter values\n&gt; #\n&gt; p          =   OneAtm               # pressure\n&gt; tburner    =   373.7                # burner temperature\n&gt; mdot       =   0.04                 # kg/m^2/s\n&gt;\n&gt; comp       =  &#39;CH4:0.65, O2:1, N2:3.76&#39;  # premixed gas composition\n&gt;\n&gt; # The solution domain is chosen to be 1 cm, and a point very near the\n&gt; # downstream boundary is added to help with the zero-gradient boundary\n&gt; # condition at this boundary.\n&gt; initial_grid = [0.0, 0.0025, 0.005, 0.0075, 0.0099, 0.01] # m\n&gt;\n&gt; tol_ss    = [1.0e-5, 1.0e-9]        # [rtol atol] for steady-state\n&gt;                                      # problem\n&gt; tol_ts    = [1.0e-5, 1.0e-4]        # [rtol atol] for time stepping\n&gt;\n&gt; loglevel  = 1                       # amount of diagnostic output (0\n&gt;                                      # to 5)\n&gt;\n&gt; refine_grid = 1                     # 1 to enable refinement, 0 to\n&gt;                                      # disable\n&gt;\n&gt;\n&gt; ################ create the gas object ########################\n&gt; #\n&gt; # This object will be used to evaluate all thermodynamic, kinetic, and\n&gt; # transport properties. It is created with two transport managers, to\n&gt; # enable switching from mixture-averaged to multicomponent transport\n&gt; # on the last solution.\n&gt; gas = GRI30(&#39;Mix&#39;)\n&gt; gas.addTransportModel(&#39;Multi&#39;)\n&gt;\n&gt; # set its state to that of the unburned gas at the burner\n&gt; gas.setState_TPX(tburner, p, comp)\n&gt;\n&gt; # create the BurnerFlame object.\n&gt; f = BurnerFlame(gas = gas, grid = initial_grid)\n&gt;\n&gt; # set the properties at the burner\n&gt; f.burner.set(massflux = mdot, mole_fractions = comp, temperature =\n&gt; tburner)\n&gt;\n&gt; # read in the fixed temperature profile\n&gt; [zloc, tvalues] = getTempData(&#39;tdata.csv&#39;)\n&gt;\n&gt; # set the temperature profile to the values read in\n&gt; f.flame.setFixedTempProfile(zloc, tvalues)\n&gt;\n&gt; f.set(tol = tol_ss, tol_time = tol_ts)\n&gt;\n&gt; # show the initial estimate for the solution\n&gt; f.showSolution()\n&gt;\n&gt; # don&#39;t solve the energy equation\n&gt; f.set(energy = &#39;off&#39;)\n&gt;\n&gt; # first solve the flame with mixture-averaged transport properties\n&gt; f.setRefineCriteria(ratio = 3.0, slope = 0.3, curve = 1)\n&gt; f.setMaxJacAge(50, 50)\n&gt; f.setTimeStep(1.0e-5, [1, 2, 5, 10, 20])\n&gt;\n&gt; f.solve(loglevel, refine_grid)\n&gt; f.save(&#39;ch4_flame_fixed_T.xml&#39;,&#39;mixav&#39;,\n&gt;         &#39;solution with mixture-averaged transport&#39;)\n&gt;\n&gt; gas.switchTransportModel(&#39;Multi&#39;)\n&gt; f.flame.setTransportModel(gas)\n&gt; f.setRefineCriteria(ratio = 3.0, slope = 0.1, curve = 0.2)\n&gt; f.solve(loglevel, refine_grid)\n&gt; f.save(&#39;ch4_flame_fixed_T.xml&#39;,&#39;multi&#39;,\n&gt;         &#39;solution with  multicomponent transport&#39;)\n&gt;\n&gt; # write the velocity, temperature, density, and mole fractions to a\n&gt; CSV file\n&gt; z = f.flame.grid()\n&gt; T = f.T()\n&gt; u = f.u()\n&gt; V = f.V()\n&gt; fcsv = open(&#39;flame_fixed_T.csv&#39;,&#39;w&#39;)\n&gt; writeCSV(fcsv, [&#39;z (m)&#39;, &#39;u (m/s)&#39;, &#39;V (1/s)&#39;, &#39;T (K)&#39;, &#39;rho (kg/m3)&#39;]\n&gt;           + list(gas.speciesNames()))\n&gt; for n in range(f.flame.nPoints()):\n&gt;      f.setGasState(n)\n&gt;      writeCSV(fcsv, [z[n], u[n], V[n], T[n], gas.density()]\n&gt;               +list(gas.moleFractions()))\n&gt; fcsv.close()\n&gt;\n&gt; print &#39;solution saved to flame_fixed_T.csv&#39;\n&gt;\n&gt; f.showStats()\n&gt;\n&gt;\n&gt; ------------------------------------------------------------------------\n&gt; --------------------\n&gt;\n&gt; On Jun 10, 2006, at 12:22 AM, Sergey Cheskis wrote:\n&gt; &gt; I am just starting my move from chemkin to cantera. I would\n&gt; &gt; appreciate very\n&gt; &gt; much if somebody can explain me how can I make a calculation of a\n&gt; &gt; burner\n&gt; &gt; stabilized flame with an experimentally measured temperature\n&gt; &gt; profile. As I\n&gt; &gt; understand, in the demos (both python and matlab) the temperature\n&gt; &gt; profile is\n&gt; &gt; calculated assuming the flame to be adiabatic. What do I need to\n&gt; &gt; change in\n&gt; &gt; the demos (matlab and/or python) in order to used a fixed temperature\n&gt; &gt; profile?\n&gt; &gt; Thank you\n&gt; &gt; Sergey\n&gt; &gt; --\n&gt; &gt; *****************************************************\n&gt; &gt; Prof. Sergey Cheskis\n&gt; &gt; School of Chemistry, Tel Aviv University,\n&gt; &gt; Tel Aviv 69978, Israel\n&gt; &gt; Tel/Fax +972-3-6407973\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; ------------------------ Yahoo! Groups Sponsor --------------------\n&gt; &gt; ~--&gt;\n&gt; &gt; Home is just a click away.  Make Yahoo! your home page now.\n&gt; &gt; http://us.click.yahoo.com/DHchtC/3FxNAA/yQLSAA/UGYolB/TM\n&gt; &gt; --------------------------------------------------------------------\n&gt; &gt; ~-&gt;\n&gt; &gt;\n&gt; &gt;\n&gt; &gt; Yahoo! Groups Links\n&gt;\n&gt;  +++++++++++++++++++++++++++++++++++++++++++\n&gt;  This Mail Was Scanned By Mail-seCure System\n&gt;  at the Tel-Aviv University CC.\n\n-- \n**********************************\nProfessor Sergey Cheskis\nSchool of Chemistry\nTel Aviv University\nTel Aviv, 69978 Israel\nTel./Fax +972-(0)3-6407973\n\n"}}