{"ygPerms":{"resourceCapabilityList":[{"resourceType":"GROUP","capabilities":[{"name":"READ"},{"name":"JOIN"}]},{"resourceType":"PHOTO","capabilities":[]},{"resourceType":"FILE","capabilities":[]},{"resourceType":"MEMBER","capabilities":[]},{"resourceType":"LINK","capabilities":[]},{"resourceType":"CALENDAR","capabilities":[]},{"resourceType":"DATABASE","capabilities":[]},{"resourceType":"POLL","capabilities":[]},{"resourceType":"MESSAGE","capabilities":[{"name":"READ"}]},{"resourceType":"PENDING_MESSAGE","capabilities":[]},{"resourceType":"ATTACHMENTS","capabilities":[{"name":"READ"}]},{"resourceType":"PHOTOMATIC_ALBUMS","capabilities":[]},{"resourceType":"MEMBERSHIP_TYPE","capabilities":[]},{"resourceType":"POST","capabilities":[{"name":"READ"}]},{"resourceType":"PIN","capabilities":[]}],"groupUrl":"groups.yahoo.com","intlCode":"us"},"comscore":"pageview_candidate","ygData":{"userId":73935432,"authorName":"E David Huckaby","from":"&quot;E David Huckaby&quot; &lt;e.david.huckaby@...&gt;","replyTo":"LIST","senderId":"4fQCfeb_q856NSmuAaNyLdF6hJUixxz-CGYdxAeNF9YkmInx65ZwtwtDWAYjnYMsn5xoZ4rXBIcCAC1F2N-PXgQd8R_Jf9Lp2bPauxAfrXrwxsU6MiPV","spamInfo":{"isSpam":false,"reason":"12"},"subject":"[cantera] Re: Flame 1 - obtaining gas properties at each gridpoint","postDate":"1128085382","msgId":999,"canDelete":false,"contentTrasformed":false,"systemMessage":false,"headers":{"messageIdInHeader":"PHMzM2NmZjU3LjA5OEBjby5tZ24ubmV0bC5kb2UuZ292Pg=="},"prevInTopic":998,"nextInTopic":0,"prevInTime":998,"nextInTime":1000,"topicId":997,"numMessagesInTopic":3,"msgSnippet":"Jeff, The flame object has a function named restore . the syntax ( from the help(BurnerFlame) ) is: flame = BurnerFlame(gas = gas, grid = grid) ","rawEmail":"Return-Path: &lt;e.david.huckaby@...&gt;\r\nX-Sender: e.david.huckaby@...\r\nX-Apparently-To: cantera@yahoogroups.com\r\nReceived: (qmail 25575 invoked from network); 30 Sep 2005 13:11:40 -0000\r\nReceived: from unknown (66.218.66.166)\n  by m24.grp.scd.yahoo.com with QMQP; 30 Sep 2005 13:11:40 -0000\r\nReceived: from unknown (HELO tw3.netl.doe.gov) (204.154.136.254)\n  by mta5.grp.scd.yahoo.com with SMTP; 30 Sep 2005 13:11:38 -0000\r\nX-Server-Uuid: E5331CB2-3709-419D-9163-8709D90A115C\r\nMessage-ID: &lt;s33cff57.098@...&gt;\r\nX-Mailer: Novell GroupWise Internet Agent 6.5.3\r\nDate: Fri, 30 Sep 2005 09:03:02 -0400\r\nTo: cantera@yahoogroups.com\r\nMIME-Version: 1.0\r\nX-TMWD-Spam-Summary: SEV=0.9; DFV=A2005093004; IFV=2.0.4,4.0-7;\n RPD=4.00.0003;\n RPDID=303030312E30413039303230342E34333344333632382E303031312D452D6D4B2F6430637347664638662B6150624279775344773D3D;\n ENG=IBF; TS=20050930130330; CAT=NONE; CON=NONE;\r\nX-WSS-ID: 6F23E8141WO454085-01-02\r\nContent-Type: multipart/alternative;\n boundary=&quot;=__PartB795C496.0__=&quot;\r\nX-eGroups-Msg-Info: 1:12:0:0\r\nFrom: &quot;E David Huckaby&quot; &lt;e.david.huckaby@...&gt;\r\nSubject: [cantera] Re: Flame 1 - obtaining gas properties at each\n gridpoint\r\nX-Yahoo-Group-Post: member; u=73935432\r\n\r\n\r\n--=__PartB795C496.0__=\r\nContent-Type: text/plain;\n charset=us-ascii\r\nContent-Transfer-Encoding: 7bit\r\n\r\nJeff,\n \nThe &quot;flame&quot; object has a function named &quot;restore&quot;.\n \nthe syntax ( from the help(BurnerFlame) ) is:\n \nflame = BurnerFlame(gas = gas, grid = grid)\nflame.restore( file = &quot;soln.xml&quot;, id = &quot;solution&quot;)\n \nwhere the arguments in the  function mirror those in the &quot;save&quot;\nfunction:\n \nflame.save( file = &quot;soln.xml&quot;, id = &quot;solution&quot;, desc = &quot;none&quot;)\n \nA note is that the save function does not over-write a previously saved\nsolution in\nthe save file.  Instead the solution is saved with to &quot;solution id&quot;\nwith an underscode(&quot;_&quot;) followed by a unique integer (in ascending\norder) appended to the give solution id name.\n \nIf you look in the xml file output from flame you can the tag &quot;solution\nid&quot; will give the\napproriate values for the argument to restore.  For example if you run\nthe &quot;flame1.py&quot; demo\ntwice you get to solutions of with an id = &quot;solution&quot; and the second\nwith an id = &quot;solution_2&quot;\n \nDave\n \n\n&gt;&gt;&gt; jemiller@... 9/29/2005 4:45:09 PM &gt;&gt;&gt;\n\nJeffrey,\n\nI have been able to get python to give me the information I need \nabout each individual grid point.  However, I can&#39;t figure out how to \nget python to correctly import a previously calculated solution to \nuse as the initial guess for the next run.  I only know how to do \nthis in Matlab, and it is important so that I can vary parameters \nlike mdot on each run without the next solution taking too long.  Do \nyou know the correct syntax needed to import solutions into python?  \nThank you very much for your help.\n\nJeff Miller\n\nColorado School of Mines Engineering\n\n\n\n\n--- In cantera@yahoogroups.com, &quot;Bergthorson, Jeffrey M.&quot; \n&lt;jeffb@t...&gt; wrote:\n&gt; Jeff,\n&gt; \n&gt; To obtain thermal conductivities or other gas properties, you need \nto\n&gt; define some functions in the matlab or python script that defines \nyour\n&gt; problem.  In my stagnation-point flame simulations, I added the\n&gt; following commands to StagnationFlow.py:\n&gt; \n&gt;     def density(self, point):\n&gt;         self.setGasState(point)\n&gt;         return self.gas.density()\n&gt;         \n&gt;     def viscosity(self, point):\n&gt;       self.setGasState(point)\n&gt;         return self.gas.viscosity()\n&gt;         \n&gt;     def thermalConductivity(self, point):\n&gt;       self.setGasState(point)\n&gt;         return self.gas.thermalConductivity()\n&gt; \n&gt;     def meanMolarMass(self, point):\n&gt;       self.setGasState(point)\n&gt;         return self.gas.meanMolarMass()\n&gt; \n&gt; I then created a file write.py that can be called to write the \noutput to\n&gt; comma-delimited files.\n&gt; \n&gt; def csvwrite(filename,f,gas):\n&gt;     z = f.flow.grid()\n&gt;     T = f.T()\n&gt;     u = f.u()    \n&gt;     V = f.V()\n&gt;     fcsv = open(filename+&#39;.csv&#39;,&#39;w&#39;)\n&gt;     writeCSV(fcsv, [&#39;z (m)&#39;, &#39;u (m/s)&#39;, &#39;V (1/s)&#39;, &#39;T \n(K)&#39;, &#39;density\n&gt; [kg/m^3]&#39;, &#39;Mean Mol. Mass [kg/kmol]&#39;, &#39;viscosity \n[Ns/m^2]&#39;, &#39;Thermal\n&gt; Cond. [W/m/K]&#39;] + list(gas.speciesNames()))\n&gt;     for n in range(f.flow.nPoints()):\n&gt;             f.setGasState(n)\n&gt;             writeCSV(fcsv, [z[n], u[n], V[n],\n&gt; T[n],f.density(n),f.meanMolarMass(n),f.viscosity\n(n),f.thermalConductivit\n&gt; y(n)]+list(gas.moleFractions()))\n&gt;     fcsv.close() \n&gt; \n&gt; This contains a loop that sets the gas properties to that \ncorresponding\n&gt; to each solution point.  These values are then written to file.\n&gt; \n&gt; You should be able to do something very similar in your burner-flame\n&gt; script in Matlab.\n&gt; \n&gt; Hope that helps,\n&gt; \n&gt; Jeffrey M. Bergthorson\n&gt; Postdoctoral Scholar in Aeronautics\n&gt; California Institute of Technology\n&gt; Pasadena, CA, 91106\n&gt; 626.395.4445 (phone)\n&gt;  \n&gt; -----Original Message-----\n&gt; From: cantera@yahoogroups.com [mailto:cantera@yahoogroups.com] On \nBehalf\n&gt; Of Jeff Miller\n&gt; Sent: Tuesday, September 27, 2005 9:38 PM\n&gt; To: cantera@yahoogroups.com\n&gt; Subject: [cantera] Flame 1\n&gt; \n&gt; I am using flame1.m in Matlab to calculate the stand off distance \nfor a\n&gt; burner flame.  I need to know the thermal conductivity at each grid\n&gt; point.  The command, thermalConductivity(gas) returns the thermal\n&gt; conductivity of the gas at the final grid point.  The command, \nsolution\n&gt; (fl, &#39;flow&#39;, thermalConductivity(gas)) returns a list containing the\n&gt; correct number of entries, but they are not even close to the \ncorrect\n&gt; values (the first point is 500, and most of the rest are 0).  My\n&gt; ultimate goal is to write a csv file containing the velocity,\n&gt; temperature, and thermal conductivity profiles.  This is easy on \nPython,\n&gt; but I still have not figured out how to import solutions into \npython to\n&gt; use as an initial guess.  Does anyone know how to get the thermal\n&gt; conductivity at each grid point in Matlab, or how to import \nsolutions as\n&gt; initial guesses in Python?  \n&gt; \n&gt; Thank you very much for any help you can offer.\n&gt; \n&gt; Jeff Miller\n&gt; \n&gt; Colorado School of Mines Engineering\n&gt; \n&gt; \n&gt; \n&gt; \n&gt; ------------------------ Yahoo! Groups Sponsor --------------------\n~--&gt;\n&gt; Get fast access to your favorite Yahoo! Groups. Make Yahoo! your \nhome\n&gt; page http://us.click.yahoo.com/dpRU5A/wUILAA/yQLSAA/UGYolB/TM\n&gt; --------------------------------------------------------------------\n~-&gt; \n&gt; \n&gt;  \n&gt; Yahoo! Groups Links\n\n\n\n\n\n\n\nYahoo! Groups Links\n\n\n\n\n\n\n\n\n\n\r\n--=__PartB795C496.0__=\r\nContent-Type: text/html;\n charset=iso-8859-1\r\nContent-Transfer-Encoding: quoted-printable\r\nContent-Description: HTML\r\n\r\n&lt;HTML&gt;&lt;HEAD&gt;\n&lt;META http-equiv=3DContent-Type content=3D&quot;text/html; charset=\r\n=3Diso-8859-1&quot;&gt;\n&lt;META content=3D&quot;MSHTML 6.00.2800.1505&quot; name=3DGENERATOR&gt;&lt;/=\r\nHEAD&gt;\n&lt;BODY style=3D&quot;MARGIN: 4px 4px 1px; FONT: 10pt Tahoma&quot;&gt;\n&lt;DIV&gt;Jeff,&lt;/D=\r\nIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;The &quot;flame&quot; object has a function named &quot;restore=\r\n&quot;.&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;the syntax ( from the help(BurnerFlame) ) i=\r\ns:&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;flame =3D BurnerFlame(gas =3D gas, grid =3D=\r\n grid)&lt;/DIV&gt;\n&lt;DIV&gt;flame.restore( file =3D &quot;soln.xml&quot;, id =3D &quot;solution&quot;)&lt;/D=\r\nIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;where&nbsp;the arguments in the&nbsp;&nbsp;funct=\r\nion mirror those in the &quot;save&quot; function:&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;flame=\r\n.save( file =3D &quot;soln.xml&quot;, id =3D &quot;solution&quot;, desc =3D &quot;none&quot;)&lt;/DIV&gt;\n&lt;DIV&gt;=\r\n&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;A note is that the save function does not over-write a pr=\r\neviously saved solution in&lt;/DIV&gt;\n&lt;DIV&gt;the save file.&nbsp; Instead the solu=\r\ntion is saved with&nbsp;to &quot;solution id&quot; with an underscode(&quot;_&quot;) followed b=\r\ny&nbsp;a unique integer (in ascending order)&nbsp;appended to the give solu=\r\ntion id name.&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;If you look in the xml file outp=\r\nut from flame you can the tag &quot;solution id&quot; will give the&lt;/DIV&gt;\n&lt;DIV&gt;appror=\r\niate values for the argument to restore.&nbsp; For example if you run the &quot;=\r\nflame1.py&quot; demo&lt;/DIV&gt;\n&lt;DIV&gt;twice you get to solutions of with an id =3D &quot;so=\r\nlution&quot; and the second with an id =3D &quot;solution_2&quot;&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n=\r\n&lt;DIV&gt;Dave&lt;/DIV&gt;\n&lt;DIV&gt;&nbsp;&lt;/DIV&gt;\n&lt;DIV&gt;&lt;BR&gt;&gt;&gt;&gt; jemiller@... =\r\n9/29/2005 4:45:09 PM &gt;&gt;&gt;&lt;BR&gt;&lt;/DIV&gt;\n&lt;DIV style=3D&quot;COLOR: #000000&quot;&gt;J=\r\neffrey,&lt;BR&gt;&lt;BR&gt;I have been able to get python to give me the information I =\r\nneed &lt;BR&gt;about each individual grid point.&nbsp; However, I can&#39;t figure ou=\r\nt how to &lt;BR&gt;get python to correctly import a previously calculated solutio=\r\nn to &lt;BR&gt;use as the initial guess for the next run.&nbsp; I only know how t=\r\no do &lt;BR&gt;this in Matlab, and it is important so that I can vary parameters =\r\n&lt;BR&gt;like mdot on each run without the next solution taking too long.&nbsp; =\r\nDo &lt;BR&gt;you know the correct syntax needed to import solutions into python?&=\r\nnbsp; &lt;BR&gt;Thank you very much for your help.&lt;BR&gt;&lt;BR&gt;Jeff Miller&lt;BR&gt;&lt;BR&gt;Colo=\r\nrado School of Mines Engineering&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;--- In cantera@yahoogro=\r\nups.com, &quot;Bergthorson, Jeffrey M.&quot; &lt;BR&gt;&lt;jeffb@t...&gt; wrote:&lt;BR&gt;&gt; Je=\r\nff,&lt;BR&gt;&gt; &lt;BR&gt;&gt; To obtain thermal conductivities or other gas properti=\r\nes, you need &lt;BR&gt;to&lt;BR&gt;&gt; define some functions in the matlab or python s=\r\ncript that defines &lt;BR&gt;your&lt;BR&gt;&gt; problem.&nbsp; In my stagnation-point f=\r\nlame simulations, I added the&lt;BR&gt;&gt; following commands to StagnationFlow.=\r\npy:&lt;BR&gt;&gt; &lt;BR&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp; def density(self, point):&lt;BR&gt;&=\r\ngt;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; self.setGasState(point)&lt;BR&gt;&=\r\ngt;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; return self.gas.density()&lt;BR=\r\n&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; &lt;BR&gt;&gt;&nbsp;&nbsp;&nbsp;=\r\n&nbsp; def viscosity(self, point):&lt;BR&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nb=\r\nsp; self.setGasState(point)&lt;BR&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nb=\r\nsp; return self.gas.viscosity()&lt;BR&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp=\r\n;&nbsp; &lt;BR&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp; def thermalConductivity(self, poin=\r\nt):&lt;BR&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; self.setGasState(point)&lt;BR&gt;=\r\n&gt;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; return self.gas.thermalCond=\r\nuctivity()&lt;BR&gt;&gt; &lt;BR&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp; def meanMolarMass(self,=\r\n point):&lt;BR&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; self.setGasState(point=\r\n)&lt;BR&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; return self.gas.meanMo=\r\nlarMass()&lt;BR&gt;&gt; &lt;BR&gt;&gt; I then created a file write.py that can be calle=\r\nd to write the &lt;BR&gt;output to&lt;BR&gt;&gt; comma-delimited files.&lt;BR&gt;&gt; &lt;BR&gt;&gt=\r\n; def csvwrite(filename,f,gas):&lt;BR&gt;&gt; &nbsp;&nbsp;&nbsp; z =3D f.flow.gri=\r\nd()&lt;BR&gt;&gt; &nbsp;&nbsp;&nbsp; T =3D f.T()&lt;BR&gt;&gt; &nbsp;&nbsp;&nbsp; u =3D=\r\n f.u()&nbsp;&nbsp;&nbsp; &lt;BR&gt;&gt; &nbsp;&nbsp;&nbsp; V =3D f.V()&lt;BR&gt;&gt; &n=\r\nbsp;&nbsp;&nbsp; fcsv =3D open(filename+&#39;.csv&#39;,&#39;w&#39;)&lt;BR&gt;&gt; &nbsp;&nbsp;&nb=\r\nsp; writeCSV(fcsv, [&#39;z (m)&#39;, &#39;u (m/s)&#39;, &#39;V (1/s)&#39;, &#39;T &lt;BR&gt;(K)&#39;, &#39;density&lt;BR=\r\n&gt;&gt; [kg/m^3]&#39;, &#39;Mean Mol. Mass [kg/kmol]&#39;, &#39;viscosity &lt;BR&gt;[Ns/m^2]&#39;, &#39;The=\r\nrmal&lt;BR&gt;&gt; Cond. [W/m/K]&#39;] + list(gas.speciesNames()))&lt;BR&gt;&gt; &nbsp;&nbs=\r\np;&nbsp; for n in range(f.flow.nPoints()):&lt;BR&gt;&gt;&nbsp;&nbsp;&nbsp;&nbsp; =\r\n&nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; f.setGasState(n)&lt;BR&gt;&gt;&nbsp;&nbsp;&=\r\nnbsp;&nbsp; &nbsp;&nbsp;&nbsp; &nbsp;&nbsp;&nbsp; writeCSV(fcsv, [z[n], u[n=\r\n], V[n],&lt;BR&gt;&gt; T[n],f.density(n),f.meanMolarMass(n),f.viscosity&lt;BR&gt;(n),f.=\r\nthermalConductivit&lt;BR&gt;&gt; y(n)]+list(gas.moleFractions()))&lt;BR&gt;&gt; &nbsp;&=\r\nnbsp;&nbsp; fcsv.close() &lt;BR&gt;&gt; &lt;BR&gt;&gt; This contains a loop that sets t=\r\nhe gas properties to that &lt;BR&gt;corresponding&lt;BR&gt;&gt; to each solution point.=\r\n&nbsp; These values are then written to file.&lt;BR&gt;&gt; &lt;BR&gt;&gt; You should b=\r\ne able to do something very similar in your burner-flame&lt;BR&gt;&gt; script in =\r\nMatlab.&lt;BR&gt;&gt; &lt;BR&gt;&gt; Hope that helps,&lt;BR&gt;&gt; &lt;BR&gt;&gt; Jeffrey M. Bergt=\r\nhorson&lt;BR&gt;&gt; Postdoctoral Scholar in Aeronautics&lt;BR&gt;&gt; California Insti=\r\ntute of Technology&lt;BR&gt;&gt; Pasadena, CA, 91106&lt;BR&gt;&gt; 626.395.4445 (phone)=\r\n&lt;BR&gt;&gt;&nbsp; &lt;BR&gt;&gt; -----Original Message-----&lt;BR&gt;&gt; From: cantera@ya=\r\nhoogroups.com [&lt;A href=3D&quot;mailto:cantera@yahoogroups.com]&quot;&gt;mailto:cantera@y=\r\nahoogroups.com]&lt;/A&gt; On &lt;BR&gt;Behalf&lt;BR&gt;&gt; Of Jeff Miller&lt;BR&gt;&gt; Sent: Tues=\r\nday, September 27, 2005 9:38 PM&lt;BR&gt;&gt; To: cantera@yahoogroups.com&lt;BR&gt;&gt;=\r\n Subject: [cantera] Flame 1&lt;BR&gt;&gt; &lt;BR&gt;&gt; I am using flame1.m in Matlab =\r\nto calculate the stand off distance &lt;BR&gt;for a&lt;BR&gt;&gt; burner flame.&nbsp; I=\r\n need to know the thermal conductivity at each grid&lt;BR&gt;&gt; point.&nbsp; Th=\r\ne command, thermalConductivity(gas) returns the thermal&lt;BR&gt;&gt; conductivit=\r\ny of the gas at the final grid point.&nbsp; The command, &lt;BR&gt;solution&lt;BR&gt;&g=\r\nt; (fl, &#39;flow&#39;, thermalConductivity(gas)) returns a list containing the&lt;BR&gt;=\r\n&gt; correct number of entries, but they are not even close to the &lt;BR&gt;corr=\r\nect&lt;BR&gt;&gt; values (the first point is 500, and most of the rest are 0).&nb=\r\nsp; My&lt;BR&gt;&gt; ultimate goal is to write a csv file containing the velocity=\r\n,&lt;BR&gt;&gt; temperature, and thermal conductivity profiles.&nbsp; This is eas=\r\ny on &lt;BR&gt;Python,&lt;BR&gt;&gt; but I still have not figured out how to import sol=\r\nutions into &lt;BR&gt;python to&lt;BR&gt;&gt; use as an initial guess.&nbsp; Does anyon=\r\ne know how to get the thermal&lt;BR&gt;&gt; conductivity at each grid point in Ma=\r\ntlab, or how to import &lt;BR&gt;solutions as&lt;BR&gt;&gt; initial guesses in Python?&=\r\nnbsp; &lt;BR&gt;&gt; &lt;BR&gt;&gt; Thank you very much for any help you can offer.&lt;BR&gt;=\r\n&gt; &lt;BR&gt;&gt; Jeff Miller&lt;BR&gt;&gt; &lt;BR&gt;&gt; Colorado School of Mines Enginee=\r\nring&lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; &lt;BR&gt;&gt; ------------------------ Y=\r\nahoo! Groups Sponsor --------------------&lt;BR&gt;~--&gt;&lt;BR&gt;&gt; Get fast acces=\r\ns to your favorite Yahoo! Groups. Make Yahoo! your &lt;BR&gt;home&lt;BR&gt;&gt; page &lt;A=\r\n href=3D&quot;http://us.click.yahoo.com/dpRU5A/wUILAA/yQLSAA/UGYolB/TM&quot;&gt;http://u=\r\ns.click.yahoo.com/dpRU5A/wUILAA/yQLSAA/UGYolB/TM&lt;/A&gt;&lt;BR&gt;&gt; --------------=\r\n------------------------------------------------------&lt;BR&gt;~-&gt; &lt;BR&gt;&gt; &lt;=\r\nBR&gt;&gt;&nbsp; &lt;BR&gt;&gt; Yahoo! Groups Links&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;-------------=\r\n----------- Yahoo! Groups Sponsor --------------------~--&gt; &lt;BR&gt;Get fast =\r\naccess to your favorite Yahoo! Groups. Make Yahoo! your home page&lt;BR&gt;&lt;A hre=\r\nf=3D&quot;http://us.click.yahoo.com/dpRU5A/wUILAA/yQLSAA/UGYolB/TM&quot;&gt;http://us.cl=\r\nick.yahoo.com/dpRU5A/wUILAA/yQLSAA/UGYolB/TM&lt;/A&gt;&lt;BR&gt;-----------------------=\r\n---------------------------------------------~-&gt; &lt;BR&gt;&lt;BR&gt;&lt;BR&gt;Yahoo! Grou=\r\nps Links&lt;BR&gt;&lt;BR&gt;&lt;*&gt; To visit your group on the web, go to:&lt;BR&gt;&nbsp;&=\r\nnbsp;&nbsp; &lt;A href=3D&quot;http://groups.yahoo.com/group/cantera/&quot;&gt;http://group=\r\ns.yahoo.com/group/cantera/&lt;/A&gt;&lt;BR&gt;&lt;BR&gt;&lt;*&gt; To unsubscribe from this gr=\r\noup, send an email to:&lt;BR&gt;&nbsp;&nbsp;&nbsp; cantera-unsubscribe@yahoogroup=\r\ns.com&lt;BR&gt;&lt;BR&gt;&lt;*&gt; Your use of Yahoo! Groups is subject to:&lt;BR&gt;&nbsp;&n=\r\nbsp;&nbsp; &lt;A href=3D&quot;http://docs.yahoo.com/info/terms/&quot;&gt;http://docs.yahoo.=\r\ncom/info/terms/&lt;/A&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;BR&gt;&lt;/DIV&gt;&lt;/BODY&gt;&lt;/HTML&gt;\n\r\n--=__PartB795C496.0__=--\r\n\n"}}